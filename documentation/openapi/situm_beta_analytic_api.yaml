openapi: 3.0.2
servers:
  - url: 'https://{server}'
    variables:
      server:
        default: dashboard.situm.com
externalDocs:
  description: Visit our Developer Docs for more information.
  url: 'https://developers.situm.com'
info:
  description: >
    This OpenAPI specification describes the Situm REST APIs. These APIs allow
    you to work with cartography and location data stored in <a
    href="https://dashboard.situm.com/">Situm Platform</a>.


    > **_Consuming this API:_**  You may use most HTTP clients & libraries. We
    recommend <a href="https://curl.se/">curl</a> from the command line or <a
    href="https://www.postman.com/">Postman</a>

    if you prefer a GUI.


    > **_Generating a Client library:_**  Download this OpenAPI spec and

    paste it into the<a href="https://editor.swagger.io/"> Swagger Editor</a>.
    Then click on "Generate client", and select the language in which you want
    to auto-generate your API Client library.



    <br/>

    <strong style="font-size:25px">Hello World</strong>


    First of all, <a
    href="https://situm.freshdesk.com/support/solutions/articles/35000154638">create
    an APIKEY</a>.

    Then, you may call any of the API methods using your favourite HTTP client.
    For example, you may retrieve the buildings in your account.


    ```

    //Example using the APIKEY T9NPlzk+jSI/Oi5DG6ODk57O0pZXdx4

    curl  -H 'X-API-KEY: T9NPlzk+jSI/Oi5DG6ODk57O0pZXdx4'
    'https://dashboard.situm.es/api/v1/buildings/'

    ```


    <br/>

    <strong style="font-size:25px">Authentication and Authorization</strong>



    All requests must be authenticated.  We allow three methods. For more
    information please visit: <a
    href="http://developers.situm.com/pages/rest/authentication">Authentication
    page</a>.


    <a name="auth_jwt_bearer"></a>

    <strong>JWT Bearer (RECOMMENDED)</strong>. Headers contain a <a
    href="https://jwt.io/">JWT token</a>. To retrieve a JWT, you may use <a
    href="#operation/getToken">this API call</a>. Sample use:


    ```

    //Example using the JWT
    eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJiMjCJlbWFpbCI6InFhLmFjYW5lZG9Ac2l0dW0uZXMi

    curl -H 'Content-Type: application/json' -H 'Authorization: Bearer
    eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJiMjCJlbWFpbCI6InFhLmFjYW5lZG9Ac2l0dW0uZXMi'
    'https://dashboard.situm.com/api/v1/buildings'

    ```


    <a name="auth_apikey"></a>

    <strong>APIKEY</strong>. Headers contain the user email and APIKEY. You may
    create your APIKEY <a
    href="https://situm.freshdesk.com/support/solutions/articles/35000154638">following
    this doc</a>.  Sample usage:


    ```

    //Example using the APIKEY T9NPlzk+jSI/Oi5DG6ODk57O0pZXdx4

    curl -H 'X-API-KEY: T9NPlzk+jSI/Oi5DG6ODk57O0pZXdx4'
    'https://dashboard.situm.com/api/v1/buildings'

    ```

    <strong>Types of API keys</strong>. There are three types of API keys that
    restrict access to endpoints. API Keys can be created or edited from the
    Situm dashboard

    <ul>

    <li><strong>Read-write:</strong> This API key can operate without
    restrictions and invoke all the endpoints of the Situm API. Please, be
    careful when using this type of API key.</li>

    <li><strong>Read-only:</strong> Allows positioning and executing all GET
    requests to the Situm API.</li>

    <li><strong>Positionig:</strong> Allows positioning. We highly recommend
    using this type for mobile applications.</li>

    </ul>

    <br>


    ![SBRM
    logo](https://situm.com/wp-content/uploads/2023/05/Logo-SBRM-para-miniaturas-de-noticias-ENG-1024x71.jpg)
  version: 1.103.0
  title: Situm REST API
  contact:
    email: situm@situm.com
    name: developers@situm.com
  x-logo:
    url: 'http://developers.situm.com/images/common/logo-situm.svg'
    backgroundColor: '#000000'
    altText: Situm logo
tags:
  - name: Reports
    x-beta-analytic: true
    description: >
      Our service can collect large amounts of data and process it to serve it.
      If performance or bandwidth consumption are important for you, you can get
      the answers in csv format.

      To do this, invoke the endpoint with <strong>.csv</strong> instead of
      <strong>.json</strong> when you fill the  <strong>format</strong> field.

      When using this API, please take the following into consideration:

       * The responses from the reports endpoints, when queried in JSON format, return a  <strong>meta</strong> object that provides information about the attributes returned in the data object.
        Specifically, it includes the attribute name, type, and whether the attribute is Nullable or not. For more information about the data types that can be returned, please refer to the following <a href="https://clickhouse.com/docs/en/sql-reference/data-types">link</a>.
       * The responses from the reports endpoints also include a  <strong>statistics </strong> object that allows you to evaluate the efficiency of the query. If the query is made in CSV format, this information can be obtained by examining the response header 'X-Db-Statistics'. If a particular query is taking too long or is inefficient, consider applying the filtering parameters provided by each of the endpoints.
       * The  <strong>time_zone</strong> parameter in the endpoints allows you to retrieve date fields in a specific time zone. When a particular time zone (different from UTC) is required, the dates will be returned as local time with no UTC relation information. For more information, you can refer to sections 4.2.2 and 4.3.2 of the <a href="https://www.loc.gov/standards/datetime/iso-tc154-wg5_n0038_iso_wd_8601-1_2016-02-16.pdf">ISO 8601</a> standard (Data elements and interchange formats).
       To illustrate this, let's assume that the response from one of the endpoints for a date field without requiring a specific time zone is: "timestamp": "2023-05-20T16:59:02Z". If, for example, we request the result in the "Europe/Madrid" time zone, the returned date will be: "timestamp": "2023-05-20 18:59:02".
  - name: Configurations
    x-private: true
    x-beta-analytic: true
    description: >-
      Our service can store different configurations that would allow the
      application to change its behavior.
  - name: Patrols
    x-private: true
    x-beta-analytic: true
  - name: Task
    x-private: true
    x-beta-analytic: true
  - name: Users
    x-public: true
    x-beta-analytic: true
paths:
  '/api/v1/reports/user_pois_paths.{format}':
    get:
      x-private: true
      x-beta-analytic: true
      tags:
        - Reports
      summary: >-
        User poi paths endpoint. Provides information about a user's route while
        staying close to some poi.
      description: >-
        Within a period of time we indicate the positions and time in which the
        indicated user was close to a poi.
      operationId: userPoisPathsReports
      parameters:
        - name: accuracy
          in: query
          description: Maximum distance to the poi to count it in the session.
          schema:
            type: integer
            default: 5
            example: 3
        - name: from_date
          required: true
          in: query
          description: start date.
          schema:
            type: string
            format: date-time
            example: '2019-05-21T15:17:21.000000+01:00'
        - name: organization_id
          required: false
          in: query
          description: >-
            Organization id.  If not provided, the authentication header will be
            used to retrieve this information.
          schema:
            type: string
            format: uuid
            example: 3fa85f64-5717-4562-b3fc-2c963f66afa6
        - name: to_date
          required: true
          in: query
          description: end date.
          schema:
            type: string
            format: date-time
            example: '2019-05-21T15:17:21.000000+01:00'
        - name: user_id
          required: true
          in: query
          description: User id.
          schema:
            type: string
            format: uuid
            example: 3fa85f64-5717-4562-b3fc-2c963f66afa6
        - name: format
          required: true
          in: path
          description: Response format.
          schema:
            type: string
            enum:
              - json csv
            example: json
      responses:
        '200':
          $ref: '#/components/responses/UserPoisPathsResponse'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '422':
          $ref: '#/components/responses/UnprocessableEntity'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/api/v1/reports/user_pois_sessions_matches.{format}':
    get:
      x-private: true
      x-beta-analytic: true
      tags:
        - Reports
      summary: >-
        User pois sessions matches endpoint. Provides information about the stay
        times of users near of pois.
      description: >-
        For a supplied user, we show the sessions of stay near a poi within a
        limited period of time
      operationId: userPoisSessionsMatchesReports
      parameters:
        - name: accuracy
          in: query
          description: Maximum distance to the poi to count it in the session.
          schema:
            type: integer
            default: 5
            example: 3
        - name: from_date
          required: true
          in: query
          description: start date
          schema:
            type: string
            format: date-time
            example: '2019-07-01T15:21:54.276Z'
        - name: organization_id
          required: false
          in: query
          description: >-
            Organization id.  If not provided, the authentication header will be
            used to retrieve this information.
          schema:
            type: string
            format: uuid
            example: 3fa85f64-5717-4562-b3fc-2c963f66afa6
        - name: to_date
          required: true
          in: query
          description: end date.
          schema:
            type: string
            format: date-time
            example: '2019-07-01T15:21:54.276Z'
        - name: user_id
          required: true
          in: query
          description: User id.
          schema:
            type: string
            format: uuid
            example: 3fa85f64-5717-4562-b3fc-2c963f66afa6
        - name: format
          required: true
          in: path
          description: Response format.
          schema:
            type: string
            enum:
              - json csv
            example: json
      responses:
        '200':
          $ref: '#/components/responses/UserPoisSessionsMatchesResponse'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '422':
          $ref: '#/components/responses/UnprocessableEntity'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/api/v1/reports/geofencing_stay_time_historical.{format}':
    get:
      x-private: true
      x-beta-analytic: true
      operationId: reportsGeofencingStayTimeHistoric
      tags:
        - Reports
      description: >-
        <strong>Roles allowed: admin, user manager and user. </strong></br></br>
        This analytic allows you to know how much time a user or device has
        spent in a certain geofece. Data is retrieved from a datasource in which
        the data of time spent in a geofence is computed and stored as soon as
        it occur, therefore, if a new geofence is created, the stay times will
        be avaliable from its creation. In the same way, if a geofence is
        modified, the past stay times will not be modified. This allows perform
        queries with longer time intervals.
      summary: >-
        Geofencing stay time endpoint. Provides information about  the time that
        a user or device has spent in a certain geofece from a historical
        perspective.
      parameters:
        - name: organization_id
          in: query
          description: >-
            Filter by organization id. If not provided, the organization id of
            the user providing the authentication header will be used.
          schema:
            type: string
            format: uuid
            example: 3fa85f64-5717-4562-b3fc-2c963f66afa6
        - name: building_ids
          in: query
          description: >-
            List of comma separated buildings identifiers to search into.  If
            not provided, the authentication header will be used to retrieve
            this information.
          required: false
          example:
            - 123456
            - 432145
          style: form
          explode: false
          schema:
            type: array
            items:
              type: integer
            minItems: 1
        - name: from_date
          in: query
          description: >
            "Date (YYYY-MM-DDTHH:mm:ssZ). Filter the times of stay that started
            later or were active at the date indicated. In UTC time"
          required: true
          example: '2020-01-17T00:00:00Z'
          schema:
            type: string
            format: date-time
        - name: to_date
          in: query
          description: >
            "Date (YYYY-MM-DDTHH:mm:ssZ). Filter the times of stay that end
            before or are active at the date indicated.  In UTC time"
          required: true
          example: '2020-02-17T00:00:00Z'
          schema:
            type: string
            format: date-time
        - name: device_ids
          in: query
          description: >
            "List of comma separated devices that that should be considered to
            filter ."
          required: false
          example:
            - 12345432
            - 1234543262
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
            minItems: 1
        - name: user_ids
          in: query
          description: >
            "List of comma separated user identifiers that that should be
            considered to filter."
          required: false
          example:
            - 7c95f153-7229-4539-9c90-f4168f665f99
            - accadb7e-d573-497d-b833-777cb5e6feb1
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
              format: uuid
            minItems: 1
        - name: fence_ids
          in: query
          description: >
            "List of comma separated fence identifiers that that should be
            considered to filter."
          required: false
          example:
            - 7c327cf6-df3a-4fa2-a6bd-f86c7850b7e3
            - b9758d28-d4eb-40e0-8fc6-8fac20d79cb4
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
              format: uuid
            minItems: 1
        - name: only_assigned
          in: query
          description: |
            "To include only assigned devices to user in the search"
          required: false
          example: false
          schema:
            type: boolean
            default: false
        - name: group
          in: query
          description: >-
            Defines how the results are temporaly grouped. By default the
            grouping is done by day.
          schema:
            type: string
            enum:
              - day
              - hour
            default: day
        - name: min_stay_time
          in: query
          description: >
            Filter by a minimun duration of positioning inside the geofence in
            seconds.
          required: false
          example: 60
          schema:
            type: number
        - name: max_stay_time
          in: query
          description: >
            Filter by a maximum duration of positioning inside the geofence in
            seconds.
          required: false
          example: 2000
          schema:
            type: number
        - name: time_zone
          in: query
          description: >-
            Timezone identifier. Set the timezone of the results. If it is sent,
            and the value is different from UTC, the results will be returned in
            the indicated timezone with no UTC relation information. <p>Check
            out the avaliable timezones <a
            href="https://en.wikipedia.org/wiki/List_of_tz_database_time_zones"
            target="_blank"> here</a>. For further information about time zones
            click  <a href="https://data.iana.org/time-zones/tz-link.html"
            target="_blank"> here</a>.</p>
          schema:
            type: string
            default: UTC
            example: Europe/Madrid
        - name: session_threshold
          in: query
          description: >
            Threshold value, expressed in seconds, to consider a closed session
            if no positioning is detected
          required: false
          example: 30
          schema:
            type: number
            default: 15
        - name: format
          required: true
          in: path
          description: Response format
          schema:
            type: string
            enum:
              - json csv
            example: json
      responses:
        '200':
          $ref: '#/components/responses/GeofencingStayTimeResponse'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '422':
          $ref: '#/components/responses/UnprocessableEntity'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/api/v1/reports/geofencing_sessions_matches_historical.{format}':
    get:
      x-private: true
      x-beta-analytic: true
      operationId: reportsGeofencingSessionsHistoric
      tags:
        - Reports
      description: >-
        <strong>Roles Allowed: admin, user manager and user. </strong></br></br>
        This endpoint allows to search for devices that are or have  been inside
        the geofences of a list of buildings, within a certain period of time.
        The result is a list, where each element represents the stay of a device
        in a  geofence, indicating the entrance and exit time. </br></br> The
        endpoint allows to filter the results by specifying the list of
        buildings, devices and geofences that should be considered. It also
        allows to  filter the results by temporal range. Data is retrieved from
        a datasource in which the data of sessions in geofences is computed and
        stored as soon as it occur, therefore, if a new geofence is created, the
        sessions will be avaliable from its creation. In the same way, if a
        geofence is modified, the past sessions will not be modified. This
        allows perform queries with longer time intervals.
      summary: >-
        Geofencing seesios endpoint. Allows to search for devices that are or
        have  been inside the geofences of a list of buildings, within a certain
        period of time from a historical perspective.
      parameters:
        - name: organization_id
          in: query
          description: >-
            Filter by organization id. If not provided, the organization id of
            the user providing the authentication header will be used.
          schema:
            type: string
            format: uuid
            example: 3fa85f64-5717-4562-b3fc-2c963f66afa6
        - name: building_ids
          in: query
          description: >-
            List of comma separated buildings identifiers to search into.  If
            not provided, the authentication header will be used to retrieve
            this information.
          required: false
          example:
            - 123456
            - 432145
          style: form
          explode: false
          schema:
            type: array
            items:
              type: integer
            minItems: 1
        - name: from_date
          in: query
          description: >
            "Date (YYYY-MM-DDTHH:mm:ssZ). Filter the times of stay that started
            later or were active at the date indicated."
          required: true
          example: '2020-01-17T00:00:00Z'
          schema:
            type: string
            format: date-time
        - name: to_date
          in: query
          description: >
            "Date (YYYY-MM-DDTHH:mm:ssZ). Filter the times of stay that end
            before or are active at the date indicated."
          required: true
          example: '2020-02-17T00:00:00Z'
          schema:
            type: string
            format: date-time
        - name: device_ids
          in: query
          description: >
            "List of comma separated devices that that should be considered to
            filter ."
          required: false
          example:
            - 12345432
            - 1234543262
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
            minItems: 1
        - name: user_ids
          in: query
          description: >
            "List of comma separated user identifiers that that should be
            considered to filter."
          required: false
          example:
            - 7c95f153-7229-4539-9c90-f4168f665f99
            - accadb7e-d573-497d-b833-777cb5e6feb1
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
              format: uuid
            minItems: 1
        - name: fence_ids
          in: query
          description: >
            "List of comma separated fence identifiers that that should be
            considered to filter."
          required: false
          example:
            - 7c327cf6-df3a-4fa2-a6bd-f86c7850b7e3
            - b9758d28-d4eb-40e0-8fc6-8fac20d79cb4
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
              format: uuid
            minItems: 1
        - name: only_assigned
          in: query
          description: |
            "To include only assigned devices to user in the search"
          required: false
          example: false
          schema:
            type: boolean
            default: false
        - name: min_stay_time
          in: query
          description: >
            "Filter by a minimun duration of positioning inside the geofence in
            seconds"
          required: false
          example: 60
          schema:
            type: number
        - name: max_stay_time
          in: query
          description: >
            "Filter by a maximum duration of positioning inside the geofence in
            seconds"
          required: false
          example: 2000
          schema:
            type: number
        - name: time_zone
          in: query
          description: >-
            Timezone identifier. Set the timezone of the results. If it is sent,
            and the value is different from UTC, the results will be returned in
            the indicated timezone with no UTC relation information. <p>Check
            out the avaliable timezones <a
            href="https://en.wikipedia.org/wiki/List_of_tz_database_time_zones"
            target="_blank"> here</a>. For further information about time zones
            click  <a href="https://data.iana.org/time-zones/tz-link.html"
            target="_blank"> here</a>.</p>
          schema:
            type: string
            default: UTC
            example: Europe/Madrid
        - name: session_threshold
          in: query
          description: >
            "threshold value, expressed in seconds, to consider a closed session
            if no positioning is detected"
          required: false
          example: 30
          schema:
            type: number
            default: 15
        - name: format
          required: true
          in: path
          description: Response format
          schema:
            type: string
            enum:
              - json csv
            example: json
      responses:
        '200':
          $ref: '#/components/responses/GeofencingSessionsMatchesResponse'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '422':
          $ref: '#/components/responses/UnprocessableEntity'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/api/v1/reports/matches_between_users.{format}':
    get:
      x-private: true
      x-beta-analytic: true
      operationId: reportsMatchesBetweenUser
      tags:
        - Reports
      description: >-
        This analytic allows us to obtain the periods of coincidence of two
        users in a same geofence on the same time simultaneously for a given
        period of time. This way, after indicating a user and a period of time,
        we can obtain all those users with whom you have coincided and in which
        fences you have coincided. The endpoint considers the devices and users
        individually, that is, if two devices have contact and we launch a query
        to the api with both values, the api will return the contact of device A
        with device B and the contact of device B with the A with the same value
        of time.
      summary: >-
        Matches between users endpoint. Provides information about the stay
        times shared at same time between two users in a same geofence.
      parameters:
        - name: user_ids
          in: query
          description: >
            List of comma separated users identifiers that should be considered
            in the query to filter the shared time that you have had with other
            users/devices in one geofence.In case no identifier is passed, the
            query will be applied to all.
          required: false
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
              example:
                - 7cc5dcbe-94e7-4270-b778-459bf88928f2
                - 944ddbd0-ec44-40d5-8041-3defee3faa67
            minItems: 1
        - name: device_ids
          in: query
          description: >
            List of comma separated devices that that should be considered to
            filter the shared time that you have had with other users/devices in
            one geofence
          required: false
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
            example:
              - 43213214214214320
              - 55267214214214344
            minItems: 1
        - name: organization_id
          in: query
          description: >-
            Filter by organization id. If not provided, the organization id of
            the user providing the authentication header will be used.
          schema:
            type: string
            format: uuid
            example: 3fa85f64-5717-4562-b3fc-2c963f66afa6
        - name: building_ids
          in: query
          description: >
            List of comma separated buildings identifiers that that should be
            considered to filter the shared time that you have had with other
            users/devices in one geofence.If not provided, the authentication
            header will be used to retrieve this information.
          required: false
          style: form
          explode: false
          schema:
            type: array
            items:
              type: integer
            example:
              - 123456
              - 432145
            minItems: 1
        - name: from_date
          in: query
          description: |
            Date (YYYY-MM-DDTHH:mm:ssZ). Filter by positions after this date.
          required: true
          schema:
            type: string
            format: date-time
            example: '2020-08-17T00:00:00Z'
        - name: to_date
          in: query
          description: |
            Date (YYYY-MM-DDTHH:mm:ssZ).Filter by positions before this date.
          required: true
          schema:
            type: string
            format: date-time
            example: '2020-09-02T00:00:00Z'
        - name: min_stay_time
          in: query
          description: >-
            Minimum time sharing between users in the geofence to return. this
            time will be expressed in seconds.
          required: false
          schema:
            type: integer
            default: 15
        - name: format
          required: true
          in: path
          description: Response format
          schema:
            type: string
            enum:
              - json csv
            example: json
      responses:
        '200':
          $ref: '#/components/responses/AnalyticsGeofencingMatchesBetweenUserResponse'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '422':
          $ref: '#/components/responses/UnprocessableEntity'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/api/v1/reports/distance_between_devices.{format}':
    get:
      x-private: true
      x-beta-analytic: true
      operationId: reportsDistanceBetweenDevices
      tags:
        - Reports
      description: >-
        This analytic allows us to obtain the distance between two devices in a
        time interval. The value of the distance for that period will be
        expressed as a function of the passed percentile as parameters in
        meters. In example, the 90th percentile could be interpreted as 90% of
        the positions for the bucket are less than the distance value returned.
        The endpoint considers the devices individually, that is, if two devices
        have contact and we launch a query to the api with both values, the api
        will return the contact of device A with device B and the contact of
        device B with the A with the same value of time.
      summary: >-
        Distance between devices endpoint. Provides information about the
        distance between user in a time interval.
      parameters:
        - name: time_bucket
          in: query
          description: >
            the time_bucket desired in seconds.This parameter represents the
            size of the time segments in which you want to obtain a distance
            metric between devices. By default 60 seconds bucket is used.
          required: false
          schema:
            type: integer
            example: 10
        - name: percentile
          in: query
          description: |
            The percentile for checking distances. By default,
             the 90th percentile is used. The parameter value must be in the value
             range [0, 1] but only values in the range [0.01,0.99] are statistically significant.
          required: false
          schema:
            type: number
            example: 0.5
        - name: device_ids
          in: query
          description: >
            List of comma separated devices that that should be considered to
            filter coincidences with other devices.
          required: false
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
            example:
              - 12345432
              - 1234543262
            minItems: 1
        - name: from_date
          in: query
          description: >
            Date (YYYY-MM-DDTHH:mm:ssZ). Indicates the start of period to
            retrieve data. In UTC time
          required: true
          schema:
            type: string
            format: date-time
            example: '2020-08-17T00:00:00Z'
        - name: to_date
          in: query
          description: >
            Date (YYYY-MM-DDTHH:mm:ssZ). Indicates the end of period to retrieve
            data. In UTC time
          required: true
          schema:
            type: string
            format: date-time
            example: '2020-02-17T00:00:00Z'
        - name: organization_id
          in: query
          description: >-
            Filter by organization id. If not provided, the organization id of
            the user providing the authentication header will be used.
          schema:
            type: string
            format: uuid
            example: 3fa85f64-5717-4562-b3fc-2c963f66afa6
        - name: building_ids
          in: query
          description: >-
            List of comma separated buildings identifiers to search into.  If
            not provided, the authentication header will be used to retrieve
            this information.
          required: false
          style: form
          explode: false
          schema:
            type: array
            items:
              type: integer
            example:
              - 123456
              - 432145
            minItems: 1
        - name: format
          required: true
          in: path
          description: Response format.
          schema:
            type: string
            enum:
              - json csv
            example: json
      responses:
        '200':
          $ref: '#/components/responses/AnalyticsDistanceBetweenUserResponse'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '422':
          $ref: '#/components/responses/UnprocessableEntity'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/api/v1/reports/user_contact_tracing.{format}':
    get:
      x-private: true
      x-beta-analytic: true
      operationId: userContactTracing
      tags:
        - Reports
      description: >-
        This analytic allows us to obtain the periods of coincidence of a user
        with another user in a same geofence on the same time simultaneously for
        a given period of time. This way, after indicating a user and a period
        of time, we can obtain all those users with the target user have
        coincided and in which fences has coincided.
      summary: >-
        Matches between users endpoint. Provides information about the stay
        times shared at same time between two users in a same geofence.
      parameters:
        - name: organization_id
          required: true
          in: query
          description: Organization id.
          schema:
            type: string
            format: uuid
            example: 3fa85f64-5717-4562-b3fc-2c963f66afa6
        - name: user_id
          in: query
          description: the user identifier
          required: true
          schema:
            type: string
            format: uuid
            example: 3fa85f64-5717-4562-b3fc-2c963f66afa6
        - name: device_ids
          in: query
          description: >
            List of comma separated devices that that should be considered to
            filter the shared time that you have had with other users/devices in
            one geofence
          required: false
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
            example:
              - 43213214214214320
              - 55267214214214344
            minItems: 1
        - name: building_ids
          in: query
          description: >
            List of comma separated buildings identifiers that that should be
            considered to filter the shared time that you have had with other
            users/devices in one geofence.
          required: false
          style: form
          explode: false
          schema:
            type: array
            items:
              type: integer
            example:
              - 123456
              - 432145
            minItems: 1
        - name: from_date
          in: query
          description: |
            Date (YYYY-MM-DDTHH:mm:ssZ). Filter by positions after this date.
          required: true
          schema:
            type: string
            format: date-time
            example: '2020-08-17T00:00:00Z'
        - name: to_date
          in: query
          description: |
            Date (YYYY-MM-DDTHH:mm:ssZ).Filter by positions before this date.
          required: true
          schema:
            type: string
            format: date-time
            example: '2020-09-02T00:00:00Z'
        - name: min_stay_time
          in: query
          description: >-
            Minimum time sharing between users in the geofence to return. this
            time will be expressed in seconds.
          required: false
          schema:
            type: integer
            default: 15
        - name: format
          required: true
          in: path
          description: Response format
          schema:
            type: string
            enum:
              - json csv
            example: json
        - name: fence_ids
          in: query
          description: >
            "List of comma separated fence identifiers that that should be
            considered to filter."
          required: false
          example:
            - 7c327cf6-df3a-4fa2-a6bd-f86c7850b7e3
            - b9758d28-d4eb-40e0-8fc6-8fac20d79cb4
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
              format: uuid
            minItems: 1
      responses:
        '200':
          $ref: '#/components/responses/AnalyticsGeofencingMatchesBetweenUserResponse'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '422':
          $ref: '#/components/responses/UnprocessableEntity'
        '500':
          $ref: '#/components/responses/InternalServerError'
  /api/v1/configuration_complete:
    get:
      x-private: true
      x-beta-analytic: true
      tags:
        - Configurations
      summary: Get the list system configurations.
      description: Returns a list of platform configurations.
      operationId: getConfigurationComplete
      parameters:
        - in: header
          name: X-Sdk-Version
          description: >-
            Version of the sdk if one is being used. This parameter may vary the
            structure of the returned data.
          schema:
            type: string
            example: android_sdk_1.5
        - in: query
          name: organization_ids
          description: List of organizations identifiers separated by commas.
          schema:
            type: array
            items:
              type: string
              format: uuid
              example: 3fa85f64-5717-4562-b3fc-2c963f66afa6
            example:
              - 3fa85f64-5717-4562-b3fc-2c963f66afa6
              - 680e4c78-edb3-4232-80f7-3af03dbf911b
        - in: query
          name: names
          description: List of configuration names separated by commas.
          schema:
            type: array
            items:
              type: string
              example: enable_bluetooth
            example:
              - use_ble
              - use_wifi
        - in: query
          name: tags
          description: List of tags of configurations separated by commas.
          schema:
            type: array
            items:
              type: string
              example: sdk_android
            example:
              - location_request
              - outdoor_location_options
        - in: header
          name: If-Modified-Since
          description: >-
            Use this header to retrieve the response if some configuration has
            changed since the date sprecified. More info in
            https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/If-Modified-Since
          schema:
            items:
              type: string
              example: 'Wed, 21 Oct 2015 07:28:00 GMT'
      responses:
        '200':
          $ref: '#/components/responses/ConfigurationResponse'
        '304':
          description: >-
            Indicates that it is not necessary to retransmit the information
            because the content has not changed.
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '422':
          $ref: '#/components/responses/UnprocessableEntity'
        '500':
          $ref: '#/components/responses/InternalServerError'
  /api/v1/configurations:
    get:
      x-private: true
      x-beta-analytic: true
      tags:
        - Configurations
      summary: Get the list system configurations.
      description: Returns a list of platform configurations.
      operationId: getConfiguration
      parameters:
        - in: header
          name: X-Sdk-Version
          description: >-
            Version of the sdk if one is being used. This parameter may vary the
            structure of the returned data.
          schema:
            type: string
            example: android_sdk_1.5
        - in: query
          name: organization_ids
          description: List of organizations identifiers separated by commas.
          schema:
            type: array
            items:
              type: string
              format: uuid
              example: 3fa85f64-5717-4562-b3fc-2c963f66afa6
            example:
              - 3fa85f64-5717-4562-b3fc-2c963f66afa6
              - 680e4c78-edb3-4232-80f7-3af03dbf911b
        - in: query
          name: names
          description: List of configuration names separated by commas.
          schema:
            type: array
            items:
              type: string
              example: enable_bluetooth
            example:
              - use_ble
              - use_wifi
        - in: query
          name: tags
          description: List of tags of configurations separated by commas.
          schema:
            type: array
            items:
              type: string
              example: sdk_android
            example:
              - location_request
              - outdoor_location_options
        - in: query
          name: configuration_group_ids
          description: List of groups of configurations separated by commas.
          schema:
            type: array
            items:
              type: string
              format: uuid
            example:
              - 3fa85f64-5717-4562-b3fc-2c963f66afa6
              - 680e4c78-edb3-4232-80f7-3af03dbf911b
        - in: query
          name: all_groups
          description: Return the configuration for all groups.
          schema:
            type: boolean
            example: true
        - in: header
          name: If-Modified-Since
          description: >-
            Use this header to retrieve the response if some configuration has
            changed since the date sprecified. More info in
            https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/If-Modified-Since
          schema:
            items:
              type: string
              example: 'Wed, 21 Oct 2015 07:28:00 GMT'
      responses:
        '200':
          $ref: '#/components/responses/ConfigurationSearchResponse'
        '304':
          description: >-
            Indicates that it is not necessary to retransmit the information
            because the content has not changed.
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '422':
          $ref: '#/components/responses/UnprocessableEntity'
        '500':
          $ref: '#/components/responses/InternalServerError'
    post:
      x-private: true
      x-beta-analytic: true
      tags:
        - Configurations
      summary: Create or update a list of configurations.
      description: >-
        Create or update a list of configurations. For this you need to specify
        the configurations to save in a list.

        If you leave the configuration value to null this configuration will be
        deleted.
      operationId: createConfiguration
      requestBody:
        required: true
        $ref: '#/components/requestBodies/ConfigurationForm'
      responses:
        '201':
          $ref: '#/components/responses/ConfigurationResponse'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '422':
          $ref: '#/components/responses/UnprocessableEntity'
        '500':
          $ref: '#/components/responses/InternalServerError'
  /api/v1/configuration_groups:
    get:
      x-private: true
      x-beta-analytic: true
      parameters:
        - in: query
          name: ids
          description: List of configuration groups identifiers separated by commas.
          schema:
            type: array
            items:
              type: string
              format: uuid
              example: 3fa85f64-5717-4562-b3fc-2c963f66afa6
            example:
              - 3fa85f64-5717-4562-b3fc-2c963f66afa6
              - 680e4c78-edb3-4232-80f7-3af03dbf911b
        - in: query
          name: types
          description: 'Filter by group type, list of names separated by commas'
          schema:
            type: array
            items:
              type: string
              example: enable_bluetooth
            example:
              - sdk
              - core
        - in: query
          name: organization_ids
          description: List of tags of organization ids separated by commas.
          schema:
            type: array
            items:
              type: string
              format: uuid
              example: 3fa85f64-5717-4562-b3fc-2c963f66afa6
            example:
              - 3fa85f64-5717-4562-b3fc-2c963f66afa6
              - 680e4c78-edb3-4232-80f7-3af03dbf911b
        - in: query
          name: is_default
          description: Filter by default groups or not.
          schema:
            type: boolean
            example: true
      tags:
        - Configurations
      summary: Get the list system configuration groups.
      description: Returns a list of platform configuration groups.
      operationId: getConfigurationGroup
      responses:
        '200':
          $ref: '#/components/responses/ConfigurationGroupResponse'
        '304':
          description: >-
            Indicates that it is not necessary to retransmit the information
            because the content has not changed.
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '422':
          $ref: '#/components/responses/UnprocessableEntity'
        '500':
          $ref: '#/components/responses/InternalServerError'
    post:
      x-private: true
      x-beta-analytic: true
      tags:
        - Configurations
      summary: Create and update configuration groups.
      description: Create and update a list of configuration groups.
      operationId: createUpdateConfigurationGroup
      requestBody:
        required: true
        $ref: '#/components/requestBodies/ConfigurationGroupForm'
      responses:
        '201':
          $ref: '#/components/responses/ConfigurationGroupResponse'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '422':
          $ref: '#/components/responses/UnprocessableEntity'
        '500':
          $ref: '#/components/responses/InternalServerError'
    delete:
      x-private: true
      x-beta-analytic: true
      tags:
        - Configurations
      summary: Delete configuration group
      description: Deletes configuration group given its identifier.
      operationId: deleteConfigurationGroup
      parameters:
        - in: query
          name: ids
          description: List of identifier for the configuration group to delete.
          required: true
          schema:
            type: array
            items:
              type: string
              format: uuid
              example: 3fa85f64-5717-4562-b3fc-2c963f66afa6
      responses:
        '204':
          description: The configuration group was deleted properly
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '422':
          $ref: '#/components/responses/UnprocessableEntity'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/api/v1/users/email/{email}':
    get:
      x-private: true
      x-beta-analytic: true
      x-internal: true
      tags:
        - Users
      summary: Get a User by his email.
      description: Get user  by the email.
      operationId: GetUserByEmail
      parameters:
        - name: email
          required: true
          in: path
          description: User identifier.
          explode: true
          schema:
            type: string
            example: mailito@mail.com
      responses:
        '200':
          description: Successful operation.
          content:
            application/json:
              schema:
                type: object
                $ref: '#/components/schemas/UserExtraView'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '500':
          $ref: '#/components/responses/InternalServerError'
  /api/v1/rounds/round/search:
    get:
      x-private: true
      x-beta-analytic: true
      tags:
        - Patrols
      summary: Get a list of patrols given a search criteria.
      description: >-
        Returns a list of patrols without step information for a given list of
        building identifiers or a given organization id.
      parameters:
        - name: name
          required: true
          description: Filter rounds by name.
          in: query
          schema:
            type: string
        - name: organization_id
          required: true
          description: The organization where to search.
          in: query
          schema:
            type: string
          example: 1cc6c1de-889c-4bea-ae17-12d889a12eb0
        - name: building_ids
          required: true
          description: List of building identifiers separated by commas.
          in: query
          schema:
            type: string
          example: '1056,3861'
      responses:
        '200':
          description: The list of patrols
          content:
            application/json:
              schema:
                properties:
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/Patrol'
                  metadata:
                    $ref: '#/components/schemas/PaginationMetadata'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '500':
          $ref: '#/components/responses/InternalServerError'
  /api/v1/rounds/round/:
    post:
      x-private: true
      x-beta-analytic: true
      tags:
        - Patrols
      summary: Create a round.
      description: This endpoint allows you to create a new round.
      operationId: createRound
      requestBody:
        required: true
        $ref: '#/components/requestBodies/PatrolCreateForm'
      responses:
        '201':
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                $ref: '#/components/schemas/Patrol'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '409':
          $ref: '#/components/responses/Conflict'
        '422':
          $ref: '#/components/responses/UnprocessableEntity'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/api/v1/rounds/round/{id}':
    get:
      x-private: true
      x-beta-analytic: true
      tags:
        - Patrols
      summary: Get a patrol without the steps information.
      operationId: getPatrol
      description: This endpoint allows you to get a patrol information without steps.
      parameters:
        - name: id
          required: true
          description: The identifier of the patrol to fetch.
          in: path
          example: 5618aef12-187d-4104-945d-dd4da92faa9c
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: Successful operation.
          content:
            application/json:
              schema:
                type: object
                $ref: '#/components/schemas/PatrolWithSteps'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/InternalServerError'
    put:
      x-private: true
      x-beta-analytic: true
      summary: Update an existing patrol.
      operationId: updatePatrol
      tags:
        - Patrols
      requestBody:
        required: true
        $ref: '#/components/requestBodies/PatrolUpdateForm'
      parameters:
        - in: path
          name: id
          description: The round to update's id
          required: true
          schema:
            type: string
            format: uuid
            example: 3fa85f64-5717-4562-b3fc-2c963f66afa6
      responses:
        '200':
          description: Successful operation.
          content:
            application/json:
              schema:
                type: object
                $ref: '#/components/schemas/Patrol'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '409':
          $ref: '#/components/responses/Conflict'
        '422':
          $ref: '#/components/responses/UnprocessableEntity'
        '500':
          $ref: '#/components/responses/InternalServerError'
    delete:
      x-private: true
      x-beta-analytic: true
      summary: Delete a patrol.
      operationId: deletePatrol.
      tags:
        - Patrols
      parameters:
        - in: path
          name: id
          description: The identifier of the patrol to delete.
          required: true
          schema:
            type: string
            format: uuid
            example: 3fa85f64-5717-4562-b3fc-2c963f66afa6
        - in: query
          name: hard
          description: Whether to mark as deleted or to removed efectively.
          schema:
            type: boolean
            default: false
      responses:
        '204':
          description: Successful operation
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '409':
          $ref: '#/components/responses/Conflict'
        '422':
          $ref: '#/components/responses/UnprocessableEntity'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/api/v1/rounds/round/{id}/steps':
    get:
      x-private: true
      x-beta-analytic: true
      tags:
        - Patrols
      summary: Get the steps of a patrol.
      description: This endpoint allows you to get all steps of a patrol.
      operationId: getPatrolSteps
      parameters:
        - name: id
          required: true
          description: The identifier of the patrol to fetch.
          in: path
          example: 5618aef12-187d-4104-945d-dd4da92faa9c
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  building_ids:
                    type: array
                    items:
                      type: integer
                      format: long
                      example: 1234
                  steps:
                    type: array
                    items:
                      $ref: '#/components/schemas/PatrolStep'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/InternalServerError'
    put:
      x-private: true
      x-beta-analytic: true
      tags:
        - Patrols
      summary: Updates a patrol step.
      description: This endpoint allows you to update the steps of a patrol.
      operationId: updatePatrolStep
      parameters:
        - name: id
          required: true
          description: The identifier of the patrol to update.
          in: path
          example: 5618aef12-187d-4104-945d-dd4da92faa9c
          schema:
            type: string
            format: uuid
        - name: organization_id
          description: The identifier of the organization.
          in: query
          example: 5618aef12-187d-4104-945d-dd4da92faa9c
          schema:
            type: string
            format: uuid
      requestBody:
        required: true
        $ref: '#/components/requestBodies/PatrolStepUpdateForm'
      responses:
        '200':
          description: Execution created correctly.
          content:
            application/json:
              schema:
                type: object
                properties:
                  building_ids:
                    type: array
                    items:
                      type: string
                      example: 718aef12-187d-4104-945d-dd4da92faa9c
                  steps:
                    type: array
                    items:
                      $ref: '#/components/schemas/PatrolStep'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/api/v1/rounds/round/{id}/executions':
    get:
      x-private: true
      x-beta-analytic: true
      tags:
        - Patrols
      summary: Get all exeuctions for a patrol.
      description: This endpoint allows you to get executions for a patrol.
      operationId: getPatrolExecutions
      parameters:
        - name: id
          required: true
          description: The identifier of the patrol to fetch
          in: path
          example: 5618aef12-187d-4104-945d-dd4da92faa9c
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: Successful operation.
          content:
            application/json:
              schema:
                type: object
                properties:
                  executions:
                    type: array
                    items:
                      $ref: '#/components/schemas/PatrolExecution'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/InternalServerError'
    post:
      x-private: true
      x-beta-analytic: true
      tags:
        - Patrols
      summary: Creates a patrol execution.
      description: This endpoint allows you to create a patrol execution.
      operationId: creatPatrolExecution
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - user_id
                - start
              properties:
                user_id:
                  type: string
                  format: uuid
                start:
                  type: string
                  format: date-time
                end:
                  type: string
                  format: date-time
                incidence_description:
                  type: string
                  description: Description of the incidence when the execution have one.
                status:
                  type: string
                  enum:
                    - DONE
                    - OPEN
                    - UNCOMPLETED_WITHOUT_INCIDENCE
                    - UNCOMPLETED_WITH_INCIDENCE
                log:
                  items:
                    type: object
                    description: Log of a event in the patrol.
                    properties:
                      type:
                        type: string
                        description: Log type.
                        example: USER_ANNOTATION
                      date:
                        type: string
                        format: date-time
                        description: When the log was produced.
                        example: {}
                      data:
                        type: object
                        description: Log information.
      parameters:
        - in: path
          name: id
          description: The identifier of the patrol.
          required: true
          schema:
            type: string
            format: uuid
            example: 3fa85f64-5717-4562-b3fc-2c963f66afa6
      responses:
        '200':
          description: Successful operation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PatrolExecution'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '409':
          $ref: '#/components/responses/Conflict'
        '422':
          $ref: '#/components/responses/UnprocessableEntity'
        '500':
          $ref: '#/components/responses/InternalServerError'
  /api/v1/rounds/executions/search:
    get:
      x-private: true
      x-beta-analytic: true
      tags:
        - Patrols
      summary: Search patrol executions.
      description: >-
        This endpoint allows you to search patrol executions. Note that you have
        to pass one of the organization_id, user_ids, round_ids or executionids
        param, otherwise the request will raise a HTTP 422 error
      operationId: searchPatrolExecutions
      parameters:
        - in: query
          name: organization_id
          description: The identifier of the organization to search in.
          schema:
            type: string
            format: uuid
            example: 3fa85f64-5717-4562-b3fc-2c963f66afa6
        - in: query
          name: user_ids
          description: The list of identifiers separated by commas of users.
          schema:
            type: string
            example: >-
              3fa85f64-5717-4562-b3fc-2c963f66afa6,3fa85f64-5717-4562-b3fc-2c963f66afa6
        - in: query
          name: execution_ids
          description: The list of identifiers separated by commas of executions.
          schema:
            type: string
            example: >-
              3fa85f64-5717-4562-b3fc-2c963f66afa6,3fa85f64-5717-4562-b3fc-2c963f66afa6
        - in: query
          name: round_ids
          description: The list of identifiers separated by commas of patrols.
          schema:
            type: string
        - in: query
          name: active_at
          schema:
            type: string
            format: date-time
        - in: query
          name: also_deleted
          description: Whether to include in results deleted executions.
          schema:
            type: boolean
        - in: query
          name: from_date
          description: Filter the executions of the rounds that have ended after this hour.
          schema:
            type: string
            format: date-time
            example: '2019-07-01T15:21:54.276Z'
        - in: query
          name: to_date
          description: >-
            Filter the executions of the rounds that have ended before this
            hour.
          schema:
            type: string
            format: date-time
            example: '2019-07-01T15:21:54.276Z'
      responses:
        '200':
          description: Successful operation.
          content:
            application/json:
              schema:
                type: object
                properties:
                  executions:
                    type: array
                    items:
                      $ref: '#/components/schemas/PatrolExecution'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '422':
          $ref: '#/components/responses/UnprocessableEntity'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/api/v1/rounds/executions/{execution_id}':
    get:
      x-private: true
      x-beta-analytic: true
      tags:
        - Patrols
      summary: Get one patrol execution.
      description: >-
        This endpoint allows you to retrieve the information of one particular
        patrol execution.
      operationId: getPatrolExecution
      parameters:
        - in: path
          name: execution_id
          description: The identifier of the execution to fetch.
          required: true
          schema:
            type: string
            format: uuid
            example: 3fa85f64-5717-4562-b3fc-2c963f66afa6
      responses:
        '200':
          description: Successful operation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PatrolExecution'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/InternalServerError'
    put:
      x-private: true
      x-beta-analytic: true
      tags:
        - Patrols
      summary: Updates on patrol execution.
      description: >-
        This endpoint allows you to update a patrol execution. This endpoint
        only allows to update the end date.
      operationId: updatePatrolExecution
      parameters:
        - name: execution_id
          in: path
          required: true
          schema:
            type: string
            format: uuid
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - end
              properties:
                end:
                  type: string
                  format: date-time
                incidence_description:
                  type: string
                  description: Description of the incidence when the execution have one.
                status:
                  type: string
                  enum:
                    - DONE
                    - OPEN
                    - UNCOMPLETED_WITHOUT_INCIDENCE
                    - UNCOMPLETED_WITH_INCIDENCE
                log:
                  items:
                    type: object
                    description: Log of a event in the patrol.
                    properties:
                      type:
                        type: string
                        description: Log type.
                        example: USER_ANNOTATION
                      date:
                        type: string
                        format: date-time
                        description: When the log was produced.
                        example: {}
                      data:
                        type: object
                        description: Log information.
      responses:
        '200':
          description: Successful operation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PatrolExecution'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '409':
          $ref: '#/components/responses/Conflict'
        '422':
          $ref: '#/components/responses/UnprocessableEntity'
        '500':
          $ref: '#/components/responses/InternalServerError'
    delete:
      x-private: true
      x-beta-analytic: true
      tags:
        - Patrols
      summary: Delete one patrol execution.
      description: This endpoint allows you to delete a patrol execution.
      operationId: deletePatrolExecution
      parameters:
        - in: path
          name: execution_id
          description: The identifier of the execution to delete.
          required: true
          schema:
            type: string
            format: uuid
            example: 3fa85f64-5717-4562-b3fc-2c963f66afa6
        - in: query
          name: hard
          description: Whether to mark as deleted or to removed efectively.
          schema:
            type: boolean
      responses:
        '204':
          description: Patrol execution deleted Sucessfuly.
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
  /api/v1/tasks:
    get:
      x-private: true
      x-beta-analytic: true
      tags:
        - Task
      summary: Get a list of tasks.
      description: >-
        This endpoint allows to search tasks in an organization with multiple
        search criteria.
      operationId: getTasks
      parameters:
        - name: enabled
          in: query
          description: Filter tasks by enabled status.
          schema:
            type: boolean
        - name: executed
          in: query
          description: >-
            Search from the status of the task. If this value is not passed, the
            filter is not applied.
          explode: true
          schema:
            type: boolean
        - name: organization_id
          in: query
          description: >-
            Filter tasks by organization id. If this value is not passed, the
            organization id used is the assigned to the current user.
          schema:
            type: string
            format: uuid
        - name: user_id
          in: query
          description: >-
            Search task by assigned user. If this value is not passed, the
            filter is not applied.
          explode: true
          schema:
            type: string
            format: uuid
        - name: from_created_at
          in: query
          description: >-
            Search from the indicated timestamp. If this value is not passed,
            the filter is not applied.
          explode: true
          schema:
            type: string
            format: date-time
            example: '2021-01-01T08:25:11.615358Z'
            description: Timestamp when the task was created.
        - name: to_created_at
          in: query
          description: >-
            Search until the indicated timestamp. If this value is not passed,
            the filter is not applied.
          explode: true
          schema:
            type: string
            format: date-time
            example: '2021-12-31T08:25:11.615358Z'
            description: Timestamp when the task was created.
        - name: from_executed_at
          in: query
          description: >-
            Search from the indicated timestamp. If this value is not passed,
            the filter is not applied.
          explode: true
          schema:
            type: string
            format: date-time
            example: '2021-01-01T08:25:11.615358Z'
            description: Timestamp when the task was executed.
        - name: to_executed_at
          in: query
          description: >-
            Search until the indicated timestamp. If this value is not passed,
            the filter is not applied.
          explode: true
          schema:
            type: string
            format: date-time
            example: '2021-12-31T08:25:11.615358Z'
            description: Timestamp when the task was executed.
        - name: size
          in: query
          description: >-
            This parameter allows to paginate the results, defining the maximum
            number of elements per page. If not specified, all the results will
            be returned in a single page. Must be greater than zero.
          explode: true
          schema:
            type: integer
        - name: page
          in: query
          description: >-
            This parameter allows to retrieve a certain page of the results,
            only if the results have been paginated (parameter size has been
            specified with a correct value). Must be greater or equal to zero.
          explode: true
          schema:
            type: integer
      responses:
        '200':
          $ref: '#/components/responses/TaskPagedResponse'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '422':
          $ref: '#/components/responses/UnprocessableEntity'
        '500':
          $ref: '#/components/responses/InternalServerError'
    post:
      x-private: true
      x-beta-analytic: true
      tags:
        - Task
      summary: Create a task.
      description: Create a new task from the provided info.
      operationId: createTask
      requestBody:
        required: true
        $ref: '#/components/requestBodies/TaskForm'
      responses:
        '201':
          $ref: '#/components/responses/TaskResponse'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '422':
          $ref: '#/components/responses/UnprocessableEntity'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/api/v1/tasks/{id}':
    get:
      x-private: true
      x-beta-analytic: true
      tags:
        - Task
      summary: Get one task.
      description: This endpoint allows to retrieve a task by id.
      operationId: getTask
      parameters:
        - in: path
          name: id
          description: Filter Task by identifier.
          required: true
          schema:
            type: string
            format: uuid
            example: 3fa85f64-5717-4562-b3fc-2c963f66afa6
        - name: organization_id
          in: query
          description: Filter tasks by organization_id.
          schema:
            type: string
            format: uuid
            example: 3fa85f64-5717-4562-b3fc-2c963f66afa6
      responses:
        '200':
          $ref: '#/components/responses/TaskResponse'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
        '422':
          $ref: '#/components/responses/UnprocessableEntity'
        '500':
          $ref: '#/components/responses/InternalServerError'
    put:
      x-private: true
      x-beta-analytic: true
      tags:
        - Task
      summary: Update an task.
      description: Updates an task.
      operationId: updateTask
      parameters:
        - in: path
          name: id
          description: The Task identifier to modify
          required: true
          schema:
            type: string
            format: uuid
            example: 3fa85f64-5717-4562-b3fc-2c963f66afa6
      requestBody:
        description: Updates an task
        required: true
        $ref: '#/components/requestBodies/TaskForm'
      responses:
        '204':
          description: The task was updated properly
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
        '422':
          $ref: '#/components/responses/UnprocessableEntity'
        '500':
          $ref: '#/components/responses/InternalServerError'
    patch:
      x-private: true
      x-beta-analytic: true
      tags:
        - Task
      summary: Partial update an task.
      description: Partial updates an task.
      operationId: partialUpdateTask
      parameters:
        - in: path
          name: id
          description: The Task identifier to modify.
          required: true
          schema:
            type: string
            format: uuid
            example: 3fa85f64-5717-4562-b3fc-2c963f66afa6
      requestBody:
        description: Updates an task
        required: true
        $ref: '#/components/requestBodies/TaskPatchForm'
      responses:
        '204':
          description: The task was updated properly.
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
        '422':
          $ref: '#/components/responses/UnprocessableEntity'
        '500':
          $ref: '#/components/responses/InternalServerError'
    delete:
      x-private: true
      x-beta-analytic: true
      tags:
        - Task
      summary: Delete an task.
      description: Deletes an task given its id.
      operationId: deleteTask
      parameters:
        - in: path
          name: id
          description: The task identifier to delete.
          required: true
          schema:
            type: string
            format: uuid
            example: 3fa85f64-5717-4562-b3fc-2c963f66afa6
        - name: organization_id
          in: query
          description: Filter tasks to delete by organization_id.
          schema:
            type: string
            format: uuid
            example: 3fa85f64-5717-4562-b3fc-2c963f66afa6
        - name: soft_delete
          in: query
          description: Logic delete or not.
          schema:
            type: boolean
            example: true
            default: true
      responses:
        '204':
          description: The key was deleted properly
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '422':
          $ref: '#/components/responses/UnprocessableEntity'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/api/v1/tasks/{id}/executed':
    put:
      x-private: true
      x-beta-analytic: true
      tags:
        - Task
      summary: Change task to executed.
      description: Mark the task as executed.
      operationId: updateToExecuted
      parameters:
        - in: path
          name: id
          description: The task identifier to modify.
          required: true
          schema:
            type: string
            format: uuid
            example: 3fa85f64-5717-4562-b3fc-2c963f66afa6
      responses:
        '204':
          description: The task was updated properly.
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
        '422':
          $ref: '#/components/responses/UnprocessableEntity'
        '500':
          $ref: '#/components/responses/InternalServerError'
components:
  responses:
    LicenseResponse:
      description: The response that contains the device.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/License'
    Unauthorized:
      description: Unauthorized.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
          example:
            status: 401
            code: ''
            message: Authentication credentials are not valid.
            errors: []
    Forbidden:
      description: Forbidden.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
          example:
            status: 403
            code: ''
            message: You don't have permission to execute this operation
            errors: []
    OrganizationResponse:
      description: The organization response.
      content:
        application/json:
          schema:
            allOf:
              - $ref: '#/components/schemas/OrganizationForm'
              - type: object
                properties:
                  id:
                    type: string
                    format: uuid
                    example: 502a17a9-8b52-4448-949c-8195468b6db4
                  organization_uuid:
                    type: string
                    format: uuid
                    deprecated: true
                  created_at:
                    type: string
                    format: date-time
                    example: {}
                  updated_at:
                    type: string
                    format: date-time
                    example: {}
                  license:
                    $ref: '#/components/schemas/License'
    NotFound:
      description: Not Found.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
          example:
            status: 404
            code: ''
            message: Entity not found
            errors: []
    NotAllowed:
      description: Method Not Allowed.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
          example:
            status: 405
            code: ''
            message: Method not allowed
            errors: []
    UnprocessableEntity:
      description: Unprocessable Entity.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
          example:
            status: 422
            code: ''
            message: Unprocessable entity
            errors: []
    Conflict:
      description: Conflict.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
          example:
            status: 409
            code: conflict
            message: Conflict found
            errors: []
    BadRequest:
      description: >-
        Bad Request.

        Malformed request syntax, size too large, invalid request message
        framing, or deceptive request routing.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
          example:
            status: 400
            code: ''
            message: Bad request
            errors: []
    ReportsBadRequest:
      description: >-
        Bad Request.

        Malformed request syntax, size too large, invalid request message
        framing, or deceptive request routing.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ReportsError'
          example:
            status: 400
            code: ''
            message: Bad request
            errors: []
    InternalServerError:
      description: Internal Server Error
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
          example:
            status: 500
            code: ''
            message: Internal Server Error
            errors: []
    BadGateway:
      description: Bad Gateway.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
          example:
            status: 502
            code: ''
            message: Bad Gateway
            errors: []
    NotImplemented:
      description: Not implemented
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
          example:
            status: 501
            code: ''
            message: Not implemented
            errors: []
    UserFencesPagedResponse:
      description: The list of user geofences paged.
      content:
        application/json:
          schema:
            type: object
            properties:
              data:
                type: array
                items:
                  $ref: '#/components/schemas/AnalyticsUserFences'
              metadata:
                $ref: '#/components/schemas/PaginationMetadata'
    UserPoisPathsResponse:
      description: user's route while staying close to some poi.
      content:
        application/json:
          schema:
            type: object
            allOf:
              - $ref: '#/components/schemas/MetaCommonData'
              - type: object
                properties:
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/UserPoiPath'
        text/csv:
          schema:
            $ref: '#/components/schemas/UserPoiPath'
          example: >
            "user_id","building_id","building_name","poi_id","poi_name","timestamp_position","latitude","longitude","t_latitude","t_longitude"

            "081ba7a8-6d21-4c93-8811-f2cad2e9552a",6782,"Provisional","45831","OtroPoi","2020-08-20T10:32:09Z",42.8999771,-8.431212,42.8999767,-8.4312135

            "081ba7a8-6d21-4c93-8811-f2cad2e9552a",6782,"Provisional","45831","OtroPoi","2020-08-20T10:32:10Z",42.8999767,-8.4312135,42.899979,-8.4312138
    UserPoisSessionsMatchesResponse:
      description: Response for user sessions near of pois.
      content:
        application/json:
          schema:
            type: object
            allOf:
              - $ref: '#/components/schemas/MetaCommonData'
              - type: object
                properties:
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/UserPoiSessions'
        text/csv:
          schema:
            $ref: '#/components/schemas/UserPoiSessions'
          example: >
            "user_id","building_id","building_name","poi_id","poi_name","start","end","stay_time"

            "081ba7a8-6d21-4c93-8811-f2cad2e9552a",\N,\N,\N,\N,"2020-08-20T10:31:19Z","2020-08-20T10:32:09Z",50

            "081ba7a8-6d21-4c93-8811-f2cad2e9552a",\N,\N,\N,\N,"2020-09-11T08:46:20Z","2020-09-11T08:47:05Z",45
    UserVisitorsResponse:
      description: Response for user visitor stats.
      content:
        application/json:
          schema:
            type: object
            allOf:
              - $ref: '#/components/schemas/MetaCommonData'
              - type: object
                properties:
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/UserVisitors'
        text/csv:
          schema:
            $ref: '#/components/schemas/UserPoiPath'
          example: |
            date,visitors
            2020-11-03,0
            2020-11-04,0
            2020-11-05,0
            2020-11-06,0
            2020-11-07,0
            2020-11-08,0
            2020-11-09,0
            2020-11-10,0
            2020-11-11,0
            2020-11-12,0
            2020-11-13,0
            2020-11-14,0
            2020-11-15,0
            2020-11-16,0
            2020-11-17,0
    RawDataResponse:
      description: Response for positions raw data.
      content:
        application/json:
          schema:
            type: object
            allOf:
              - $ref: '#/components/schemas/MetaCommonData'
              - type: object
                properties:
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/RawData'
        text/csv:
          schema:
            $ref: '#/components/schemas/RawData'
          example: >
            "device_id","timestamp","indoor","building_id","floor_id","lat","lng","x","y","accuracy","user_id"

            "233198712398","2020-11-03T10:09:14Z","true",1234,98765,60.4986137,-7.669871,7.26,11.08,243.66,"9ef63ede-7faf-4966-bb48-63338e0f3760"

            "543894707034","2020-11-03T10:09:14Z","true",1234,98765,60.4985867,-7.6698322,7.17,6.63,25.97,"88b2888b-1422-4521-84df-1ade59c766ae"

            "233198712398","2020-11-03T10:09:15Z","true",1234,98765,60.4986137,-7.669871,7.26,11.08,243.66,"9ef63ede-7faf-4966-bb48-63338e0f3760"

            "543894707034","2020-11-03T10:09:15Z","true",1234,98765,60.4985867,-7.6698322,7.17,6.63,25.97,"88b2888b-1422-4521-84df-1ade59c766ae"

            "233198712398","2020-11-03T10:09:16Z","true",1234,98765,60.4986137,-7.669871,7.26,11.08,243.66,"9ef63ede-7faf-4966-bb48-63338e0f3760"

            "543894707034","2020-11-03T10:09:16Z","true",1234,98765,60.4985867,-7.6698322,7.17,6.63,25.97,"88b2888b-1422-4521-84df-1ade59c766ae"

            "233198712398","2020-11-03T10:09:17Z","true",1234,98765,60.4986137,-7.669871,7.26,11.08,243.66,"9ef63ede-7faf-4966-bb48-63338e0f3760"

            "543894707034","2020-11-03T10:09:17Z","true",1234,98765,60.4985867,-7.6698322,7.17,6.63,25.97,"88b2888b-1422-4521-84df-1ade59c766ae"

            "233198712398","2020-11-03T10:09:18Z","true",1234,98765,60.4986137,-7.669871,7.26,11.08,243.66,"9ef63ede-7faf-4966-bb48-63338e0f3760"

            "543894707034","2020-11-03T10:09:18Z","true",1234,98765,60.4985867,-7.6698322,7.17,6.63,25.97,"88b2888b-1422-4521-84df-1ade59c766ae"
    PositioningTimeResponse:
      description: >-
        Response fors tatistics about the time spent in the building in minutes.
        The avg (average) field is calculated as the total time divided by the
        number of unique devices, in this sense the std (standard deviation)
        field only applies to the day_of_week grouping, which will allow knowing
        the deviations of the time positioned on a given day for a certain
        period encompassing several weeks. In the rest of the groupings (month,
        day, hour) it will be equal to zero.
      content:
        application/json:
          schema:
            type: object
            allOf:
              - $ref: '#/components/schemas/MetaCommonData'
              - type: object
                properties:
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/PositioningTime'
        text/csv:
          schema:
            $ref: '#/components/schemas/PositioningTime'
          example: |
            "timestamp","total","avg","std"
              1,0,0,0
              2,0,0,0
              3,0,0,0
              4,0,0,0
              5,0,0,0
              6,0,0,0
              7,0,0,0
    UserPositionsResponse:
      description: Response forstatistics about the time spent in the building.
      content:
        application/json:
          schema:
            type: object
            allOf:
              - $ref: '#/components/schemas/MetaCommonData'
              - type: object
                properties:
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/UserPositions'
        text/csv:
          schema:
            $ref: '#/components/schemas/UserPositions'
          example: >
            "timestamp","lat","lng","building_id","indoor","user_id","device_id"

            "2020-11-03T11:06:06Z",40.49859,-7.669871,7890,true,"9ef63ede-7faf-4966-bb48-63338e0f3760","1234556"

            "2020-11-03T11:06:07Z",40.49859,-7.669871,7890,true,9ef63ede-7faf-4966-bb48-63338e0f3760","1234556"

            "2020-11-03T11:06:08Z",40.49859,-7.669871,7890,true,"9ef63ede-7faf-4966-bb48-63338e0f3760","1234556"

            "2020-11-03T11:06:09Z",40.49859,-7.669871,7890,true,"9ef63ede-7faf-4966-bb48-63338e0f3760","1234556"

            "2020-11-03T11:06:10Z",40.49859,-7.669871,7890,true,"9ef63ede-7faf-4966-bb48-63338e0f3760","1234556"

            "2020-11-03T11:06:11Z",40.49859,-7.669871,7890,true,"9ef63ede-7faf-4966-bb48-63338e0f3760","1234556"

            "2020-11-03T11:06:12Z",40.49859,-7.669871,7890,true,"9ef63ede-7faf-4966-bb48-63338e0f3760","1234556"

            "2020-11-03T11:06:13Z",40.49859,-7.669871,7890,true,"9ef63ede-7faf-4966-bb48-63338e0f3760","1234556"

            "2020-11-03T11:06:14Z",40.49859,-7.669871,7890,true,"9ef63ede-7faf-4966-bb48-63338e0f3760","1234556"

            "2020-11-03T11:06:15Z",40.49860,-7.669871,7890,true,"9ef63ede-7faf-4966-bb48-63338e0f3760","1234556"
    TraceSesionsResponse:
      description: Response for statistics about device sesions.
      content:
        application/json:
          schema:
            type: object
            allOf:
              - $ref: '#/components/schemas/MetaCommonData'
              - type: object
                properties:
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/UserPositions'
        text/csv:
          schema:
            $ref: '#/components/schemas/UserPositions'
          example: >
            "timestamp_session","device_id","user_id","building_id"

            1605787443628,"96813705790","9ef63ede-7faf-4966-bb48-63338e0f3760",3840

            1605782326691,"96813705790","9ef63ede-7faf-4966-bb48-63338e0f3760",3840

            1605782925917,"96813705790","9ef63ede-7faf-4966-bb48-63338e0f3760",3840
    GeohashHeatmapResponse:
      description: Response for statistics about heatmap of a  building.
      content:
        application/json:
          schema:
            type: object
            allOf:
              - $ref: '#/components/schemas/MetaCommonData'
              - type: object
                properties:
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/GeohashHeatmap'
        text/csv:
          schema:
            $ref: '#/components/schemas/GeohashHeatmap'
          example: >
            "user_id","geohash","lat","lng","weight"

            "9db93bcc-cdb9-471f-a97f-fd9669ad2fa2","ez9gvhsm0d",42.87227064371109,-8.563472628593445,455

            "cf50a181-381a-4451-964c-a017c2b59d58","ez9gvhsjp0",42.87225991487503,-8.563537001609802,546

            "9db93bcc-cdb9-471f-a97f-fd9669ad2fa2","ez9gvhstf3",42.872394025325775,-8.563054203987122,72
    GeofenceResponse:
      description: The geofence information response.
      content:
        application/json:
          schema:
            title: Geofence
            allOf:
              - type: object
                properties:
                  id:
                    type: string
                    format: uuid
                  created:
                    type: string
                    format: date
                  updated:
                    type: string
                    format: date
                example:
                  id: 533b7796-0ca8-45dc-82df-55f3b1fcd0f5
                  created: '2019-07-01T15:21:54.276Z'
                  updated: '2019-07-01T15:21:54.276Z'
              - $ref: '#/components/schemas/Geofence'
    PathPoseResponse:
      description: Returns the user or device path.
      content:
        application/json:
          schema:
            type: array
            items:
              $ref: '#/components/schemas/PathPose'
    AnalyticsGeofencingMatchesBetweenUserResponse:
      description: Returns the matched times between users in the same geofence.
      content:
        application/json:
          schema:
            type: object
            allOf:
              - $ref: '#/components/schemas/MetaCommonData'
              - type: object
                properties:
                  data:
                    type: array
                    items:
                      $ref: >-
                        #/components/schemas/AnalyticsGeofencingMatchesBetweenUser
        text/csv:
          schema:
            $ref: '#/components/schemas/AnalyticsGeofencingMatchesBetweenUser'
          example: >
            "origin_user_id","origin_device_id","matched_user_id","matched_device_id","building_id","fence_id","start_shared_time","end_shared_time","total_shared_time"

            "bfb85bb3-b2c3-460d-8dab-23b195f34315","81211685669","47a88947-edf0-4e9f-8830-f73f33e112df","834211389785",6850,"b50cba00-8f8d-4b42-aedd-00eabf65a50e","2020-08-31T07:02:56Z","2020-08-31T09:19:22Z",8186

            "bfb85bb3-b2c3-460d-8dab-23b195f34315","81211685669","a3fbc164-9c18-4aa0-a12e-3034d0d6a54d","952334819123",6850,"b50cba00-8f8d-4b42-aedd-00eabf65a50e","2020-08-31T07:02:56Z","2020-08-31T11:33:48Z",16252
    AnalyticsDistanceBetweenUserResponse:
      description: Returns the mesaure of distance between users a time interval.
      content:
        application/json:
          schema:
            type: object
            allOf:
              - $ref: '#/components/schemas/MetaCommonData'
              - type: object
                properties:
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/AnalyticsDistanceBetweenUser'
        text/csv:
          schema:
            $ref: '#/components/schemas/AnalyticsDistanceBetweenUser'
          example: >
            "origin_user_id","origin_device_id","matched_user_id","matched_device_id","building_id","floor_id","time_bucket","distance"

            "a3fbc164-9c18-4aa0-a12e-3034d0d6a54d","952334819123","bfb85bb3-b2c3-460d-8dab-23b195f34315","81211685669",6850,14132,"2020-08-31T07:02:00Z",7.55610408782959

            "a3fbc164-9c18-4aa0-a12e-3034d0d6a54d","952334819123","bfb85bb3-b2c3-460d-8dab-23b195f34315","81211685669",6850,14132,"2020-08-31T07:04:00Z",4.014425754547119

            "a3fbc164-9c18-4aa0-a12e-3034d0d6a54d","952334819123","bfb85bb3-b2c3-460d-8dab-23b195f34315","81211685669",6850,14132,"2020-08-31T07:06:00Z",3.936992645263672
    GeofencingStayTimeResponse:
      description: Return the time spend in a geofence.
      content:
        application/json:
          schema:
            type: object
            allOf:
              - $ref: '#/components/schemas/MetaCommonData'
              - type: object
                properties:
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/GeofencingStayTime'
        text/csv:
          schema:
            $ref: '#/components/schemas/GeofencingStayTime'
          example: >
            "timestamp","device_id","user_id","building_id","floor_id","matched_fence_id","seconds_in_fence","stay_time","sessions_count"

            "2021-02-02","5323811","05bdd7f7-a714-4fb6-803e-2d4c414dd8f5",7033,14469,"d2d24997-1e07-4c3b-86df-1c879fc69247",9864,"02:44:24",1

            "2021-02-02","123436","41dce707-d2e4-4f1f-9b2c-6317e8dbe647",7033,14469,"d2d24997-1e07-4c3b-86df-1c879fc69247",10430,"02:53:50",3

            "2021-02-02","8239012","8f00b03a-e057-4a5b-9532-ab3401dd178d",7033,14469,"d2d24997-1e07-4c3b-86df-1c879fc69247",9814,"02:43:34",5
    GeofencingSessionsMatchesResponse:
      description: Return the time spend in a geofence.
      content:
        application/json:
          schema:
            type: object
            allOf:
              - $ref: '#/components/schemas/MetaCommonData'
              - type: object
                properties:
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/GeofencingSesionMatch'
        text/csv:
          schema:
            $ref: '#/components/schemas/GeofencingSesionMatch'
          example: >
            "device_id","user_id","building_id","floor_id","matched_fence_id","ts_start","ts_end","seconds_in_fence"

            "1973123","e37f1a7f-6bc1-4b71-8564-0bc8401494e7",7033,14467,"a57ead3d-af2e-442a-86ae-071c665d869a","2021-02-08T00:54:14Z","2021-02-08T00:54:47Z",33

            "1973123","e37f1a7f-6bc1-4b71-8564-0bc8401494e7",7033,14467,"a57ead3d-af2e-442a-86ae-071c665d869a","2021-02-08T01:05:54Z","2021-02-08T01:06:21Z",27

            "1973123","e37f1a7f-6bc1-4b71-8564-0bc8401494e7",7033,14467,"a57ead3d-af2e-442a-86ae-071c665d869a","2021-02-08T01:45:36Z","2021-02-08T01:46:45Z",69

            "1973123","e37f1a7f-6bc1-4b71-8564-0bc8401494e7",7033,14467,"a57ead3d-af2e-442a-86ae-071c665d869a","2021-02-08T01:55:57Z","2021-02-08T01:56:30Z",33
    userPositionsResponse:
      description: Response forstatistics about the time spent in the building.
      content:
        application/json:
          schema:
            type: object
            allOf:
              - $ref: '#/components/schemas/MetaCommonData'
              - type: object
                properties:
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/userPosition'
        text/csv:
          schema:
            $ref: '#/components/schemas/userPosition'
          example: >
            "timestamp","session_mark","building_id","floor_id","user_id","device_id","lat","lng"

            "2020-12-01T23:05:55Z",324748959,7033,14466,"e37f1a7f-6bc1-4b71-8564-0bc8401494e7","1973123",43.3519482,-8.4249118

            "2020-12-01T23:05:58Z",324748959,7033,14466,"e37f1a7f-6bc1-4b71-8564-0bc8401494e7","1973123",43.3519557,-8.4249548

            "2020-12-01T23:06:01Z",324748959,7033,14466,"e37f1a7f-6bc1-4b71-8564-0bc8401494e7","1973123",43.3519998,-8.425025
    HasDataResponse:
      description: Returns information about the user's positioning activity.
      content:
        application/json:
          schema:
            type: object
            allOf:
              - $ref: '#/components/schemas/MetaCommonData'
              - type: object
                properties:
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/AnalyticsHasData'
    BuildingResponse:
      description: The building information response.
      content:
        application/json:
          schema:
            title: Building
            allOf:
              - $ref: '#/components/schemas/Building'
              - type: object
                properties:
                  geofences:
                    type: array
                    items:
                      $ref: '#/components/schemas/Geofence'
                example:
                  geofences:
                    - code: geofenceCode
                      name: Geofence human readable name
                      organization_id: 7cc5dcbe-94e7-4270-b778-459bf88928f2
                      info: Information of the geofence in HTML
                      type: POLYGON
                      geometric:
                        - - 42.87222393230354
                          - -8.563449931291075
                        - - 42.8721964122444
                          - -8.563451272395582
                        - - 42.87219542938491
                          - -8.563330572989912
                        - - 42.87222294944449
                          - -8.563330572989912
                        - - 42.87222393230354
                          - -8.563449931291075
                      floor_id: 4263
                      level_id: 4263
                      building_id: '2872'
                      deleted: false
    ConfigurationResponse:
      x-private: true
      x-beta-analytic: true
      description: Returns the list of configurations.
      headers:
        Last-Modified:
          schema:
            type: integer
          description: >-
            Contains the date and time at which the origin server believes the
            resource was last modified.
          example: 'Wed, 21 Oct 2015 07:28:00 GMT'
      content:
        application/json:
          schema:
            type: array
            items:
              $ref: '#/components/schemas/Configuration'
    ConfigurationSearchResponse:
      x-private: true
      x-beta-analytic: true
      description: Return the requested configurations.
      content:
        application/json:
          schema:
            type: object
            additionalProperties: true
            example:
              location_request: true
              outdoor_location_options: false
    ConfigurationGroupResponse:
      x-private: true
      x-beta-analytic: true
      description: Returns the list of configuration groups.
      content:
        application/json:
          schema:
            type: array
            items:
              $ref: '#/components/schemas/ConfigurationGroup'
    RealTimeUsers:
      description: Successful operation.
      content:
        application/json:
          schema:
            type: object
            properties:
              real_time_users:
                type: array
                items:
                  type: object
                  properties:
                    uuid:
                      type: string
                      format: uuid
                      example: 87077852-f298-4e93-ab6d-c93e44d291f1
                    email:
                      type: string
                      example: developers@situm.com
                    device_id:
                      type: number
                      example: 1234
                    guard:
                      type: string
                      example: null
                    full_name:
                      type: string
                      example: Developers Situm
                    device:
                      type: object
                      nullable: true
                      properties:
                        id:
                          type: string
                          example: 1234
                        code:
                          type: string
                        description:
                          type: string
                          example: Motorola G20 Plus
                        organization:
                          type: string
                          format: uuid
                          example: 87077852-f298-4e93-ab6d-c93e44d291f1
                        group_ids:
                          type: array
                          items:
                            type: number
                        building_ids:
                          type: array
                          items:
                            type: number
                        user_id:
                          type: string
                          format: uuid
                        type:
                          type: string
                          example: SMARTPHONE
    TaskResponse:
      description: The task information response.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Task'
    TaskPagedResponse:
      x-private: true
      x-beta-analytic: true
      description: The list of tasks paged.
      content:
        application/json:
          schema:
            type: object
            properties:
              data:
                type: array
                items:
                  $ref: '#/components/schemas/Task'
              metadata:
                $ref: '#/components/schemas/PaginationMetadata'
  schemas:
    Alarm:
      title: Alarm
      type: object
      x-examples: {}
      properties:
        uuid:
          type: string
          format: uuid
          example: 3fa85f64-5717-4562-b3fc-2c963f66afa6
          description: UUID of the alarm.
        x:
          type: number
          format: float
          example: 10
          description: >-
            The cartesian X coordinate where the alarm has been created. Is is
            specified in meters from the bottom-left corner of the floorplan.
            See <a
            href="https://situm.freshdesk.com/a/solutions/articles/35000168185">
            this explanation</a> for details.
        'y':
          type: number
          format: float
          example: 23.5
          description: >-
            The cartesian Y coordinate where the alarm has been created. Is is
            specified in meters from the bottom-left corner of the floorplan.
            See <a
            href="https://situm.freshdesk.com/a/solutions/articles/35000168185">
            this explanation</a> for details.
        lat:
          type: number
          format: float
          example: 43.360238068498255
          description: >-
            The latitude in WSG84 format where the alarm has been created. See
            <a
            href="https://situm.freshdesk.com/a/solutions/articles/35000168185">
            this explanation</a> for details.
        lng:
          type: number
          format: float
          example: -8.409432085091224
          description: >-
            The longitude in WSG84 format where the alarm has been created. See
            <a
            href="https://situm.freshdesk.com/a/solutions/articles/35000168185">
            this explanation</a> for details.
        building_id:
          type: number
          format: long
          example: 1234
          description: The identifier of the building where the alarm has been created.
        floor_id:
          type: number
          format: long
          example: 12345
          description: The identifier of the floor where the alarm has been created.
        outside:
          type: boolean
          example: false
          description: Whether the alarm has been created outdoors.
        inside:
          type: boolean
          example: true
          description: Whether the alarm has been created indoors.
        created_at:
          type: string
          format: time-date
          example: '2019-07-01T15:21:54.276Z'
          description: Alarm creation time.
        updated_at:
          type: string
          format: time-date
          example: '2019-07-01T15:21:54.276Z'
          description: Alarm last update time.
        type:
          $ref: '#/components/schemas/AlarmType'
        status_changes:
          type: array
          description: The sequence of states that the alarm has passed through.
          items:
            $ref: '#/components/schemas/AlarmStatusChange'
        chat_room:
          type: string
          nullable: true
          description: (DEPRECATED) Do not use.
        active:
          type: boolean
          example: true
          description: >-
            Tells whether or not the alarm is still active. An alarm is active
            if it has not been attended. One way of <a
            href="https://situm.freshdesk.com/a/solutions/articles/35000167782">attending
            the alarm is to do it from Situm Dashboard</a>.
        current_state:
          description: >-
            The current status of the alarm (is the same as the status of the
            last alarm change).
          example: CLOSED
          $ref: '#/components/schemas/AlarmStatus'
        custom_fields:
          type: array
          description: >-
            Free key-value pairs where you may store additional information
            associated to the alarm.
          items:
            $ref: '#/components/schemas/CustomField'
    AlarmType:
      type: string
      description: >-
        The type of alarm. See <a href="#tag/Alarms"> Alarms Section</a> for
        details.
      enum:
        - BREACH
        - DANGER
        - DEADMAN
        - EMERGENCY
        - STATIONARY
        - GEOFENCE_MAX_STAY_TIME
        - ASSISTANCE_REQUEST
    AlarmStatus:
      type: string
      description: >-
        The states that an alarm can go through. See <a href="#tag/Alarms">
        Alarms Section</a> for details.
      enum:
        - CLOSED
        - CONFIRMED
        - MARKED_FALSE
        - OTHER
    AlarmStatusUpdate:
      type: string
      description: >-
        The states that an alarm can go through. See <a href="#tag/Alarms">
        Alarms Section</a> for details.
      enum:
        - OPEN
        - CLOSED
        - CONFIRMED
        - MARKED_FALSE
        - OTHER
    AlarmStatusChangeBase:
      type: object
      properties:
        message:
          type: string
          maxLength: 255
          description: The registered message that explains the status change.
          example: Suspicious red handbag in the lobby.
        location_description:
          type: string
          maxLength: 255
          example: Main hall near the elevator
          description: >-
            A free description of the location where the status change was
            triggered (e.g. "Main hall near the elevator").
        action:
          type: string
          maxLength: 255
          description: A free description of the action that must be done.
          example: Send tactical team.
    AlarmStatusChange:
      allOf:
        - $ref: '#/components/schemas/AlarmStatusChangeBase'
        - type: object
          properties:
            status:
              $ref: '#/components/schemas/AlarmStatusUpdate'
            uuid:
              type: string
              format: uuid
              example: 3fa85f64-5717-4562-b3fc-2c963f66afa6
            user_uuid:
              type: string
              format: uuid
              example: 3fa85f64-5717-4562-b3fc-2c963f66afa6
            created_at:
              type: string
              format: time-date
              example: '2019-07-01T15:21:54.276Z'
    AlarmStatusChangeUpdate:
      type: object
      allOf:
        - type: object
          required:
            - user_id
            - status
          properties:
            alarm_id:
              description: >-
                The identifier of the alarm that creates the alarm status
                change.
              type: string
              format: uuid
            user_id:
              description: The identifier of the user that creates the alarm status change.
              type: string
              format: uuid
        - $ref: '#/components/schemas/AlarmStatusChangeBase'
    AnalyticsUserFences:
      type: object
      example:
        - fence_id: 3fa85f64-5717-4562-b3fc-2c963f66afa6
          matched_fence_id: 3fa85f64-5717-4562-b3fc-2c963f66afa6
          user_id: 3fa85f64-5717-4562-b3fc-2c963f66afa6
          device_id: 232062580255773
          start: '2019-05-21T15:17:21.000000+01:00'
          end: '2019-05-22T15:17:21.000000+01:00'
          building_id: '5217'
          level_id: '10246'
          duration: 9575338
          seconds_in_fence: 9575338
          closed: false
        - fence_id: 3fa85f64-5717-4562-b3fc-2c963f66afa6
          matched_fence_id: 3fa85f64-5717-4562-b3fc-2c963f66afa6
          user_id: 3fa85f64-5717-4562-b3fc-2c963f66afa6
          device_id: 232062580255773
          start: '2019-05-21T15:17:21.000000+01:00'
          end: '2019-05-22T15:17:21.000000+01:00'
          building_id: '5217'
          level_id: '10246'
          duration: 9575338
          seconds_in_fence: 9575338
          closed: true
      properties:
        device_id:
          type: string
          format: uuid
          example: 3fa85f64-5717-4562-b3fc-2c963f66afa6
          description: Identifier of the device.
        matched_fence_id:
          type: string
          format: uuid
          example: '2019-05-21T15:17:21.000000+01:00'
          description: Identifier of the geofence where the device is.
        fence_id:
          type: string
          format: uuid
          example: '2019-05-21T15:17:21.000000+01:00'
          description: Identifier of the geofence where the device is.
          deprecated: true
        start:
          type: string
          format: date-time
          example: '2019-05-21T15:17:21.000000+01:00'
          description: Timestamp when the user entered in the geofence.
        end:
          type: string
          format: date-time
          example: '2019-05-22T15:17:21.000000+01:00'
          description: Timestamp of the last known position of the device for this session.
        seconds_in_fence:
          type: integer
          example: 1654
          description: Number of seconds between the from and to dates.
        duration:
          type: integer
          example: 1654
          description: Number of seconds between the from and to dates.
          deprecated: true
        building_id:
          type: string
          description: Building where geofence is located.
        floor_id:
          type: string
          description: Floor where geofence is located.
        level_id:
          type: string
          description: Level(floor) where geofence is located.
          deprecated: true
        user_id:
          type: string
          format: uuid
        closed:
          type: boolean
          description: If the session is close or not.
    ApInformation:
      type: object
      properties:
        id:
          type: integer
          format: int64
          description: Unique identifier for the AP or beacon.
          example: '12345678'
        floor_id:
          type: integer
          description: Id of the floor that the AP or beacon is in.
          example: 1234
        last_listened:
          type: string
          format: date-time
          description: >-
            Based on positioning data, the date on which the AP or beacon was
            last listened.
        is_5ghz:
          type: boolean
          description: Indicates if the AP works at 5Ghz (only available for wifi APs).
        ssid:
          type: string
          description: SSID of the AP (only available for wifi APs).
        uuid:
          type: string
          description: UUID of the beacon (only available for bluetooth beacons).
        battery_level:
          type: integer
          description: >-
            Last battery level known of the AP (only available for bluetooth
            beacons).
        battery_level_date:
          type: string
          format: date-time
          description: >-
            Time on which the last known battery level was obtained (only
            available for bluetooth beacons).
        major:
          type: string
          description: >-
            Major identifier of the beacon, in hexadecimal format (only
            available for bluetooth beacons).
        minor:
          type: string
          description: >-
            Minor identifier of the beacon, in hexadecimal format (only
            available for bluetooth beacons).
        type:
          type: string
          description: >-
            Sensor type. Indicates whether the object is a bluetooth beacon or a
            wifi AP.
          enum:
            - wifi
            - ble
    ApiKey:
      type: object
      properties:
        id:
          type: string
          format: uuid
          example: 3fa85f64-5717-4562-b3fc-2c963f66afa6
        apikey:
          type: string
          example: d5dbe1e18ed4a7e5b913e3f3f64a9e0b65be52060664079e8c7745086458a6c6
        created_at:
          type: string
          format: time-date
          example: '2019-07-01T15:21:54.276Z'
        updated_at:
          type: string
          format: time-date
          example: '2019-07-01T15:21:54.276Z'
        deleted_at:
          type: string
          format: time-date
          nullable: true
          example: '2019-07-01T15:21:54.276Z'
        permission:
          $ref: '#/components/schemas/ApiKeyPermission'
        description:
          type: string
          example: Human readable description of the api key
        user_id:
          type: string
          format: uuid
          example: 3fa85f64-5717-4562-b3fc-2c963f66afa6
    ApiKeyPermission:
      type: string
      enum:
        - read-only
        - read-write
        - disabled
    Building:
      title: Building
      type: object
      properties:
        id:
          type: integer
          description: >-
            Building identifier (retrieve all you buildings to know their
            identifiers).
        user_uuid:
          type: string
          format: uuid
          description: User identifier.
          deprecated: true
        name:
          type: string
          description: Building name.
        description:
          type: string
          description: Building address.
          deprecated: true
        created_at:
          type: string
          format: date-time
          description: Time when the building was created.
        updated_at:
          type: string
          format: date-time
          description: Last time when the building was updated.
        location:
          $ref: '#/components/schemas/Location'
        corners:
          type: array
          items:
            type: object
            minItems: 4
            maxItems: 4
            items:
              $ref: '#/components/schemas/Location'
          description: 'The order  is topleft, topright, bottomright, bottomleft.'
        dimensions:
          description: Building dimensions in meters.
          type: object
          properties:
            width:
              description: Distance between the topleft corner and the topright corner.
              type: number
              format: float
            lenght:
              description: Distance between the topright corner and the bottomright corner.
              type: number
              format: float
        rotation:
          description: >-
            Building rotation in radians. In starting from the west in a
            counter-clockwise order.
          type: number
          format: float
        custom_fields:
          type: array
          items:
            $ref: '#/components/schemas/CustomField'
        picture_url:
          type: string
          nullable: true
        picture_thumb_url:
          type: string
          nullable: true
        server_url:
          type: string
          nullable: true
        calibration_model:
          description: Calibration model of the building.
          type: object
          properties:
            id:
              type: integer
              description: Calibration identifier.
            updated_at:
              type: string
              format: date-time
              description: Last time when the calibration model was updated.
            download:
              type: string
              description: Our API url for download the calibration model.
              nullable: true
        info:
          type: string
          description: Aditional information of the building in HTML.
        user_id:
          type: string
          format: uuid
          description: User identifier.
        address:
          type: string
          description: Building address.
      example:
        id: 1000
        user_uuid: ffe70d04-b20b-4aea-a0e8-39d25e062db1
        name: My building
        description: Some description
        created_at: '2018-01-11T09:30:51.803+01:00'
        updated_at: '2018-07-19T12:31:23.395+02:00'
        location:
          lat: 42.3307132892641
          lng: -7.87168136788409
        dimensions:
          width: 36.6006156111518
          length: 20.5051547583146
        corners:
          - lat: 42.330684
            lng: -7.871932
          - lat: 42.330888
            lng: -7.871583
          - lat: 42.330742
            lng: -7.871429
          - lat: 42.330539
            lng: -7.871779
        rotation: -0.664248151098747
        custom_fields: []
        picture_url: /uploads/building/1000/9e3213d1-1a70-4cc4-a9d3-d74fd8b47172.png
        picture_thumb_url: /uploads/building/1000/9e3213c1-1a70-4cc4-a9d3-d74fd8b47172.png
        server_url: '*'
        calibration_model:
          id: '96919,'
          updated_at: '2019-04-17T16:06:20.140+00:00'
          download: /api/v1/model/75/latest/file
        info: ''
    CustomField:
      title: CustomField
      description: >
        Key-value pairs that the user can use to extend and fully customize the
        information associated with some objects.

        For more information please visit this <a
        href="http://developers.situm.com/pages/terminology/#custom-values_container">link</a>
      type: object
      properties:
        key:
          type: string
        value:
          type: string
      example:
        key: key1
        value: value1
    DeletedEntities:
      required:
        - organization_id
      type: object
      properties:
        organization_id:
          type: string
          description: Organization identifier where delete devices.
          format: uuid
          example: 0034b291-a209-4c6b-a610-69e1c0503a0b
        group_ids:
          uniqueItems: true
          type: array
          items:
            type: string
            example: 69e1c0503a0b-bc4c-a209-a30e-5231eef98a22
        building_ids:
          uniqueItems: true
          type: array
          items:
            type: string
            description: >-
              building identifier to which users can be associated with the
              device. An empty array means that the device is available for all
              buildings in the organization.
            example: '1111'
        groups:
          uniqueItems: true
          type: array
          deprecated: true
          items:
            type: string
            deprecated: true
        buildings:
          uniqueItems: true
          type: array
          deprecated: true
          items:
            type: string
            deprecated: true
        organization:
          type: string
          deprecated: true
    DeviceForm:
      type: object
      properties:
        code:
          type: string
          description: >-
            Code for identifier of other applications if is needed or a natural
            identifier for humans.
          example: device0000001
        description:
          type: string
          description: Description for device.
          example: Android 10 device
        group_ids:
          type: array
          items:
            type: string
            format: uuid
        building_ids:
          uniqueItems: true
          type: array
          items:
            type: string
            description: >-
              building to which users can be associated with the device. An
              empty array means that the device is available for all buildings
              in the organization.
            example: '2222'
        type:
          type: string
          description: >-
            The type of the device. Each organization would like to segment
            devices by type, this is the name of the segment to include the
            device into. Only enabled by demand so we can activate you the
            feature flag.
          example: SMARTPHONE
        force_user_assignment:
          type: boolean
          description: >-
            Forces to unassign the user from it's current device, if any, before
            assigning it to this.
          default: false
        user_id:
          type: string
          description: User identifier assign to the device.
          format: uuid
          example: 72edd2aa-bc83-478c-9393-02adbfcd339e
        groups:
          uniqueItems: true
          type: array
          writeOnly: true
          deprecated: true
          items:
            type: string
            deprecated: true
        buildings:
          uniqueItems: true
          type: array
          writeOnly: true
          deprecated: true
          items:
            type: string
            deprecated: true
        user:
          type: array
          writeOnly: true
          deprecated: true
          items:
            type: string
            deprecated: true
    DeviceTo:
      required:
        - created_at
        - id
        - organization_id
        - updated_at
      type: object
      properties:
        id:
          type: string
          description: Device id.
          example: '0000001'
        organization:
          type: string
          deprecated: true
        code:
          type: string
          description: >-
            Code for identifier of other applications if is needed or a natural.
            identifier for humans
          example: device0000001
        description:
          type: string
          description: Description for device.
          example: Android 10 device
        user:
          type: string
          deprecated: true
        groups:
          uniqueItems: true
          type: array
          deprecated: true
          items:
            type: string
            deprecated: true
        buildings:
          uniqueItems: true
          type: array
          deprecated: true
          items:
            type: string
            deprecated: true
        type:
          type: string
          description: >-
            The type of the device. Each organization would like to segment
            devices by type, this is the name of the segment to include the
            device into. Only enabled by demand so we can activate you the
            feature flag.
          example: SMARTPHONE
        user_id:
          type: string
          description: User identifier assign to the device.
          format: uuid
          example: 72edd2aa-bc83-478c-9393-02adbfcd339e
        created_at:
          type: string
          description: Creation date.
          format: date-time
        updated_at:
          type: string
          description: Last update date.
          format: date-time
        organization_id:
          type: string
          description: Organization id.
          format: uuid
          example: 0034b291-a209-4c6b-a610-69e1c0503a0b
        group_ids:
          type: array
          items:
            type: string
            format: uuid
        building_ids:
          uniqueItems: true
          type: array
          items:
            type: string
            description: >-
              building identifier to which users can be associated with the
              device. An empty array means that the device is available for all
              buildings in the organization
            example: '1111'
    DeviceSummaryTO:
      required:
        - created_at
        - updated_at
      type: object
      properties:
        user_id:
          type: string
          description: User identifier assign to the device
          format: uuid
          example: 72edd2aa-bc83-478c-9393-02adbfcd339e
        created_at:
          type: string
          description: Creation date
          format: date-time
        updated_at:
          type: string
          description: Last update date
          format: date-time
        type:
          type: string
          description: >-
            The type of the device. Each organization would like to segment
            devices by type, this is the name of the segment to include the
            device into. Only enabled by demand so we can activate you the
            feature flag
          example: SMARTPHONE
        description:
          type: string
          description: Description for device
          example: Android 10 device
    Error:
      type: object
      properties:
        status:
          type: integer
        code:
          type: string
        message:
          type: string
        errors:
          type: array
          items:
            type: string
    ErrorMessage:
      type: object
      properties:
        status:
          type: integer
          format: int32
        code:
          type: string
        message:
          type: string
        errors:
          type: array
          items:
            type: object
    Event:
      title: Event
      type: object
      description: >-
        An event refers to an area that has been associated with a certain
        information that will be shown to the users when they pass by. Events
        can only be defined inside a building (indoors), and they have a
        circular shape. Information is always an HTML snippet (text, images,
        videos, etc.) that has been introduced in the dashboard using a Rich
        Text Editor.
      properties:
        id:
          type: integer
          description: Event identifier.
        building_id:
          type: integer
          description: >-
            Building identifier (retrieve all you buildings to know their
            identifiers).
        name:
          type: string
          description: Event name.
        created_at:
          type: string
          format: date-time
          description: Time when the event was created.
        updated_at:
          type: string
          format: date-time
          description: Last time when the event was updated.
        info:
          type: string
          description: Event aditional information.
        position:
          $ref: '#/components/schemas/CartographyPosition'
        conversion_area:
          $ref: '#/components/schemas/CartographyPosition'
        custom_fields:
          type: array
          items:
            $ref: '#/components/schemas/CustomField'
    EventOcurrence:
      title: EventOcurrence
      description: An Event Ocurrence refers a materialization of an Event.
      type: object
      properties:
        id:
          type: integer
          description: Event Ocurrence identifier.
        event_id:
          type: integer
          description: Event identifier.
        created_at:
          type: string
          format: date-time
          description: Time when the event ocurrence was created.
        updated_at:
          type: string
          format: date-time
          description: Last time when the event ocurrence was updated.
        clicked_at:
          type: string
          format: date-time
          description: Time when the event ocurrence was triggered.
        conversion_at:
          type: string
          format: date-time
          description: Time when the event conversion action was triggered.
        encoded_macaddr:
          type: integer
          description: a device id.
    Image:
      title: Image
      type: object
      properties:
        id:
          type: string
          description: imageId
        url:
          type: string
          description: Image url.
      example:
        id: ba45edf9-3dec-46fa-8db2-3ce86574d6fe.jpg
        url: >-
          https://dashboars.situm.com/uploads/unlinked/9175/ba45edf9-3dec-46fa-8db2-3ce86574d6fe.jpg
    FloorBase:
      title: FloorBase
      type: object
      properties:
        name:
          type: string
          description: Floor name.
          example: Basement
        building_id:
          type: integer
          description: >-
            Building identifier (retrieve all you buildings to know their
            identifiers).
        level:
          type: integer
          description: >-
            Floor level. Represents the phisical level of the building. If the
            building has a basement, its level will be -1.
        level_height:
          type: integer
          description: >-
            Floor level height in meters. It is 0 by default. Represents the
            distance between the floor and the ground. For more information
            please visit this <a
            href="http://developers.situm.com/pages/terminology/#level-height_container">link</a>
        created_at:
          type: string
          format: date-time
          description: Time when the floor was created.
        updated_at:
          type: string
          format: date-time
          description: Time when the floor was updated.
        maps:
          type: object
          description: Floorplan
          properties:
            scale:
              type: number
              format: float
              description: >
                'Floorplan image scale in pixels/meters.

                If buildings dimensions are 72.77 meters long by 43.27 meters
                wide

                and the building image dimensions are 1264 pixels long by 758
                pixels wide

                the scale will be 1264 pixels / 72.77 meters = 17.3698
                pixels/meters'.
            map_url:
              type: string
              description: Floorplan image url
            map_id:
              type: string
              description: Name of the map image file
        custom_fields:
          type: array
          items:
            $ref: '#/components/schemas/CustomField'
          minItems: 0
      example:
        id: 1001
        name: Basement
        building_id: 1000
        level: -1
        level_height: 5
        created_at: '2016-09-16T09:45:20.098+02:00'
        updated_at: '2016-09-16T09:45:20.098+02:00'
        maps:
          scale: 20.138829737835003
          map_url: >-
            http://dashboard.situm.com/uploads/situm/floor/map/995/80radc8f-df52-48e1-aa0b-2e5abd1262dd.PNG
          map_id: 80eazc8f-df52-48e1-aa0b-2e5abd1362dd.PNG
    Floor:
      title: Floor
      type: object
      allOf:
        - type: object
          properties:
            id:
              type: integer
              description: Floor identifier
              example: '3333'
        - $ref: '#/components/schemas/FloorBase'
    FoundItem:
      required:
        - id
        - lat
        - lng
        - type
      type: object
      properties:
        id:
          type: string
          description: identifier of the found item.
          example: '4444'
        type:
          type: string
          description: Type of the found item.
          example: BUILDING
        lat:
          type: number
          description: Geographic latitude in `WGS84`.
          format: double
          example: 0
        lng:
          type: number
          description: Geographic longitude in `WGS84`.
          format: double
          example: 0
        x:
          type: number
          description: Building relative position in x axis.
          format: double
          example: 2.22
        'y':
          type: number
          description: Building relative position in y axis.
          format: double
          example: 2.22
        level_id:
          type: integer
          description: Floor identifier for this.
          format: int64
          example: 111221
      description: Other elements to position found by the device.
    Geofence:
      title: Geofence
      required:
        - name
        - organization_id
        - type
        - geometric
      type: object
      properties:
        code:
          type: string
        name:
          type: string
        organization_id:
          type: string
        custom_fields:
          type: array
          items:
            $ref: '#/components/schemas/CustomField'
          minItems: 0
        info:
          type: string
        type:
          type: string
        geometric:
          type: array
          minItems: 3
          items:
            type: array
            maxItems: 2
            minItems: 2
            items:
              type: integer
              format: float
        building_id:
          type: string
        floor_id:
          type: integer
        level_id:
          type: integer
          deprecated: true
        description:
          type: string
          deprecated: true
        deleted:
          type: boolean
      example:
        code: geofenceCode
        name: Geofence human readable name
        organization_id: 7cc5dcbe-94e7-4270-b778-459bf88928f2
        info: Information of the geofence in HTML
        type: POLYGON
        geometric:
          - - 42.87222393230354
            - -8.563449931291075
          - - 42.8721964122444
            - -8.563451272395582
          - - 42.87219542938491
            - -8.563330572989912
          - - 42.87222294944449
            - -8.563330572989912
          - - 42.87222393230354
            - -8.563449931291075
        floor_id: 4263
        level_id: 4263
        building_id: '2872'
        deleted: false
        custom_fields:
          - key: a
            value: z
          - key: b
            value: m
          - key: a
            value: j
    GeoJSONFeatureCollection:
      title: GeoJSONFeatureCollection
      type: object
      properties:
        type:
          type: string
          enum:
            - FeatureCollection
        features:
          type: array
          items:
            $ref: '#/components/schemas/GeoJSONFeature'
        devicesInfo:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/DeviceSummaryTO'
    GeoJSONFeature:
      title: GeoJSONFeature
      type: object
      properties:
        type:
          type: string
          enum:
            - Feature
        geometry:
          type: object
          properties:
            type:
              type: string
              enum:
                - Point
            coordinates:
              type: array
              minItems: 2
              maxItems: 2
              example:
                - 3.14
                - -42
              items:
                type: integer
                format: float
        properties:
          type: object
          properties:
            accuracy:
              type: integer
              format: float
            time:
              type: string
              format: date-time
            yaw:
              type: integer
              format: float
            building_id:
              type: integer
            floor_id:
              type: integer
        id:
          type: string
        userId:
          type: string
          format: uuid
    GeoJSONFeaturePoint:
      title: GeoJSONFeaturePoint
      type: object
      properties:
        type:
          type: string
          enum:
            - Feature
        geometry:
          type: object
          properties:
            type:
              type: string
              enum:
                - Point
            coordinates:
              description: >-
                GeoJSON standard field to indicate the coordinates of the
                object.
              type: array
              minItems: 2
              maxItems: 2
              example:
                - -8.563
                - 42.872
              items:
                type: integer
                format: float
        properties:
          description: >-
            GeoJSON standard field which includes custom properties of the
            object.
          type: object
    GeoJSONRealtime:
      title: GeoJSONRealtime
      description: Position in `GeoJSON` format.
      type: object
      properties:
        id:
          type: string
          description: Feature identifier.
        type:
          type: string
          enum:
            - Feature
          description: The value is always Feature.
          example: Feature
        geometry:
          type: object
          properties:
            type:
              type: string
              enum:
                - Point
              description: The value is always Point. It must be a single position.
              example: Point
            coordinates:
              type: array
              description: The location data are represented in `WGS84` coordinate system
              items:
                minItems: 2
                maxItems: 2
                type: number
                format: double
        userId:
          type: string
        properties:
          type: object
          properties:
            time:
              type: string
              format: time-date
              description: Last time when the user was positioned.
              example: '2019-07-01T15:21:54.276Z'
            yaw:
              type: number
              format: float
              description: User rotation angle relative to earth in radians.
            local_coordinates:
              type: array
              items:
                type: number
                format: double
              description: >-
                Cartesian coordinates in meters taking the bottomleft corner as
                the origin.
            floor_id:
              type: number
              format: long
              description: |
                Floor identifier in which the user is positioned.
                It will not appear if the user is outdoors.
            building_id:
              type: number
              format: long
            level_height:
              type: number
              format: long
            volatil:
              type: object
              properties:
                buildingOrigin:
                  type: number
                  format: long
                buildingDestination:
                  type: number
                  format: long
      example:
        geometry:
          type: Point
          coordinates:
            - 42.252243560791015
            - -3.906458316256714
        id: '352188336370'
        properties:
          time: '2018-10-17T13:34:15.226Z'
          yaw: 0.09320058471965828
          local_coordinates:
            - 205.0399932861328
            - 106.47000122070312
          floor_id: 10961
          building_id: 4590
          level_height: 0
        userId: e7ad2cf5-ae00-4db5-ac9a-3f254ff5b66f
    GroupBase:
      title: GroupBase
      type: object
      description: The group data.
      properties:
        name:
          type: string
          description: Group name.
        organization_id:
          type: string
          format: uuid
          description: Organization identifier.
          default: Current user organization
        icon_colour:
          type: string
          deprecated: true
          description: >-
            Hex color code for the group. This color will be used in the
            realtime icons in case the associated users do not have one.
          example: b0694d
          default: null
        parent_group_id:
          type: string
          format: uuid
          description: >-
            Indicates the group to which the current subgroup belongs. If the
            value is null is because is a root group.
        is_staff:
          type: boolean
          deprecated: true
          description: indicates if the users of this group are staff.
          default: false
    Group:
      title: Group
      allOf:
        - type: object
          properties:
            id:
              type: string
              format: uuid
              description: group id
              example: 3fa85f64-5717-4562-b3fc-2c963f66afa6
            uuid:
              type: string
              format: uuid
              description: group id
              deprecated: true
              example: 3fa85f64-5717-4562-b3fc-2c963f66afa6
        - $ref: '#/components/schemas/GroupBase'
    License:
      title: License
      allOf:
        - type: object
          properties:
            uuid:
              type: string
              format: uuid
              description: Identifier of the license
              example: 3fa85f64-5717-4562-b3fc-2c963f66afa6
        - $ref: '#/components/schemas/LicenseBase'
    LicenseBase:
      title: LicenseBase
      type: object
      description: The license request object
      properties:
        description_en:
          type: string
          description: Description of the license in english.
          example: License description
        description_es:
          type: string
          description: Description of the license in spanish.
          example: Descripcion de licencia
        expiration_date:
          type: string
          format: date
          description: Expiration date of the license.
          example: '2025-12-13'
    Location:
      title: Location
      type: object
      description: The location data are represented in `WGS84` coordinate system.
      properties:
        lat:
          type: number
          format: float
          description: Geographic latitude.
        lng:
          type: number
          format: float
          description: Geographic longitude.
    Metadata:
      type: object
      properties:
        first:
          type: boolean
        last:
          type: boolean
        total_pages:
          type: integer
          format: int32
        total_elements:
          type: integer
          format: int64
        number_of_elements:
          type: integer
          format: int32
        size:
          type: integer
          format: int32
        number:
          type: integer
          format: int32
    GeofenceForm:
      type: object
      properties:
        name:
          type: string
        type:
          type: string
        geometric:
          type: array
          minItems: 3
          items:
            type: array
            maxItems: 2
            minItems: 2
            items:
              type: integer
              format: float
        building_id:
          type: string
        floor_id:
          type: integer
          format: long
        code:
          type: string
        organization_id:
          type: string
        custom_fields:
          type: array
          items:
            $ref: '#/components/schemas/CustomField'
          minItems: 0
        info:
          type: string
        description:
          type: string
          deprecated: true
    OrganizationForm:
      type: object
      properties:
        organization_name:
          type: string
          deprecated: true
        name:
          type: string
          example: My organization
        colors:
          $ref: '#/components/schemas/OrganizationColorForm'
        logo_path:
          type: string
        logo_login_path:
          type: string
        logo_favicon_path:
          type: string
        cookies_message:
          type: string
        support_email:
          type: string
        copyright:
          type: string
        custom_fields:
          type: array
          items:
            $ref: '#/components/schemas/CustomField'
        feature_flags:
          type: object
          additionalProperties:
            type: string
        original_feature_flags_pack:
          type: string
          enum:
            - WORKFORCE_TRACKING
            - WAY_FINDING
        current_feature_flags_pack:
          type: string
          enum:
            - WORKFORCE_TRACKING
            - WAY_FINDING
      example:
        name: 9414297797.ts@gmail.com
        colors: null
        logo_path: null
        logo_login_path: null
        logo_favicon_path: null
        cookies_message: null
        support_email: null
        copyright: null
        custom_fields:
          - key: a
            value: z
          - key: b
            value: m
          - key: a
            value: j
        feature_flags:
          collectives: 1
          devices: 1
        original_feature_flags_pack: WORKFORCE_TRACKING
        current_feature_flags_pack: WAY_FINDING
    Patrol:
      title: Patrol
      x-private: true
      x-beta-analytic: true
      description: >-
        A patrol is a list of steps that one user has to follow. Each step is
        geolocated and has some sort of time restrictions like stay in place,
        pass along one place etc.
      type: object
      properties:
        id:
          type: string
          format: uuid
        organization_id:
          type: string
          description: The identifier of the organization.
          format: uuid
          example: 71asdfa-187a-4144-945d-6d8da94fac9c
        name:
          description: The name of the patrol.
          type: string
        description:
          description: The description of the patrol.
          type: string
        executions_per_day:
          description: Number of executions per day.
          type: number
          format: int32
          example: 5
        created_at:
          type: string
          pattern: >-
            ^([0-9]{4})-[0-1][0-9]-[0-3][0-9]T[0-6][0-9]:[0-6][0-9]:[0-6][0-9].[0-9]{3}Z\[UTC\]
          example: '2020-10-14T03:39:43.050Z[UTC]'
        updated_at:
          type: string
          pattern: >-
            ^([0-9]{4})-[0-1][0-9]-[0-3][0-9]T[0-6][0-9]:[0-6][0-9]:[0-6][0-9].[0-9]{3}Z\[UTC\]
          example: '2020-10-14T03:39:43.050Z[UTC]'
        start:
          pattern: >-
            ^([0-9]{4})-[0-1][0-9]-[0-3][0-9]T[0-6][0-9]:[0-6][0-9]:[0-6][0-9](.[0-9]{3})?
          example: '2020-10-14T03:29:42.361'
        end:
          pattern: >-
            ^([0-9]{4})-[0-1][0-9]-[0-3][0-9]T[0-6][0-9]:[0-6][0-9]:[0-6][0-9](.[0-9]{3})?
          example: '2020-10-14T03:49:42.361'
        offset_start:
          type: number
          format: long
          minimum: 0
        offset_end:
          type: number
          format: long
          minimum: 0
    PatrolWithSteps:
      title: Patrol
      x-private: true
      x-beta-analytic: true
      description: >-
        A patrol is a list of steps that one user has to follow. Each step is
        geolocated and has some sort of time restrictions like stay in place,
        pass along one place etc.
      type: object
      allOf:
        - $ref: '#/components/schemas/Patrol'
        - type: object
          properties:
            steps:
              type: array
              items:
                $ref: '#/components/schemas/PatrolStep'
    PatrolStep:
      x-private: true
      x-beta-analytic: true
      type: object
      properties:
        id:
          type: string
          format: uuid
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
        fence_id:
          type: number
          format: long
        type:
          type: string
          enum:
            - PASS_BY_TIME_RESTRICTED
            - STAY_IN_PLACE
            - PASS_BY
            - ANY_ORDER
        poi_id:
          type: number
          format: long
        round_id:
          type: string
          description: The identifier of the patrol.
        description:
          type: string
          description: The description of the patrol step.
        start:
          type: string
          format: date-time
          description: The start date of the patrol step.
        end:
          type: string
          format: date-time
          description: The end date of the patrol step.
        offset:
          type: integer
          format: long
          description: >-
            The offset time of the patrol step. Basically how many minutes has
            the user above and below the assigned start/end dates.
        dwell_time:
          type: integer
          format: long
        dwell_out_time:
          type: integer
          format: long
    PatrolExecution:
      x-private: true
      x-beta-analytic: true
      type: object
      properties:
        id:
          type: string
          format: uuid
        created_at:
          type: string
          pattern: >-
            ^([0-9]{4})-[0-1][0-9]-[0-3][0-9]T[0-6][0-9]:[0-6][0-9]:[0-6][0-9].[0-9]{3}Z\[UTC\]
          example: '2020-10-14T03:39:43.050Z[UTC]'
        updated_at:
          type: string
          pattern: >-
            ^([0-9]{4})-[0-1][0-9]-[0-3][0-9]T[0-6][0-9]:[0-6][0-9]:[0-6][0-9].[0-9]{3}Z\[UTC\]
          example: '2020-10-14T03:39:43.050Z[UTC]'
        organization_id:
          type: string
          format: uuid
        round_id:
          type: string
          format: uuid
        user_id:
          type: string
          format: uuid
        start:
          type: string
          pattern: >-
            ^([0-9]{4})-[0-1][0-9]-[0-3][0-9]T[0-6][0-9]:[0-6][0-9]:[0-6][0-9](.[0-9]{3})?
          example: '2020-10-14T03:39:42.361'
        end:
          type: string
          pattern: >-
            ^([0-9]{4})-[0-1][0-9]-[0-3][0-9]T[0-6][0-9]:[0-6][0-9]:[0-6][0-9](.[0-9]{3})?
          example: '2020-10-14T03:49:42.361'
        status:
          type: string
          enum:
            - DONE
            - OPEN
            - INCOMPLETED_WITHOUT_INCIDENCE
            - INCOMPLETED_WITH_INCIDENCE
        incidence_description:
          type: string
          description: Description of the incidence when the execution have one.
        log:
          type: array
          description: List of events that have taken place during the patrol.
          items:
            type: object
            description: Log of a event in the patrol.
            properties:
              type:
                type: string
                description: Log type.
                example: USER_ANNOTATION
              date:
                type: string
                format: date-time
                description: When the log was produced.
                example: {}
              data:
                type: object
                description: Log information.
    PagedResponseDeviceTo:
      type: object
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/DeviceTo'
        metadata:
          $ref: '#/components/schemas/Metadata'
    PaginationMetadata:
      description: Metadata for  paged responses.
      type: object
      properties:
        first:
          type: boolean
        last:
          type: boolean
        total_pages:
          type: integer
        total_elements:
          type: integer
        number_of_elements:
          type: integer
        size:
          type: integer
        number:
          type: integer
    Path:
      description: >-
        This graph represents all the routes by which the user can move within
        the building.
      type: object
      properties:
        nodes:
          type: array
          description: >-
            Each node represents a certain location within the building (x, y,
            floor).
          items:
            type: object
            title: Node
            properties:
              id:
                type: integer
                description: Node identifier
              floor_id:
                type: integer
                description: Floor identifier in which the node is situated.
              x:
                type: number
                format: float
                description: >-
                  Cartesian coordinate in meters taking the bottomleft corner as
                  the origin.
              'y':
                type: number
                format: float
                description: >-
                  Cartesian coordinate in meters taking the bottomleft corner as
                  the origin.
        links:
          type: array
          items:
            title: Link
            type: object
            properties:
              source:
                type: integer
                description: Node identifier.
              target:
                type: integer
                description: Node identifier.
              origin:
                type: string
                enum:
                  - source
                  - target
                  - both
                description: >
                  Indicates if the link is uni or bidirectional depending on
                  whether the origin is in one, another or both nodes.
              accesible:
                type: boolean
                description: >-
                  Indicates if the path is situable for persons with reduced
                  mobility.
              tags:
                description: Indicates some properties of the links
                type: array
                items:
                  type: string
    PathPose:
      type: object
      properties:
        x:
          description: >-
            The cartesian X coordinate of the position. Is is specified in
            meters from the bottom-left corner of the floorplan.
          type: number
          format: double
          example: 36.44999999996873
          deprecated: true
        'y':
          description: >-
            The cartesian Y coordinate of the position. Is is specified in
            meters from the bottom-left corner of the floorplan.
          type: number
          format: double
          example: 28.335999999976487
          deprecated: true
        lat:
          description: The latitude in WSG84 format of the position.
          type: number
          format: double
          example: 42.87228353762896
        lng:
          description: The longitude in WSG84 format of the position.
          type: number
          format: double
          example: -8.563248747722891
        lon:
          description: The longitude in WSG84 format of the position.
          type: number
          format: double
          example: -8.563248747722891
          deprecated: true
        session_mark:
          type: integer
          format: int64
          example: 1213548
        t:
          type: string
          format: date-time
          example: '2021-03-22T03:36:22'
        l:
          type: integer
          format: int64
          example: 11915
        b:
          type: integer
          format: int64
          example: 5962
    PoiCategory:
      type: object
      properties:
        id:
          type: integer
          description: POI category identifier.
        name_en:
          type: string
          description: The name of the category in English.
        name_es:
          type: string
          description: The name of the category in Spanish.
        code:
          type: string
          description: POI category code.
        icon_url:
          type: string
          description: POI image url.
        selected_icon_url:
          type: string
          description: POI selected image url.
        created_at:
          type: string
          format: date-time
          description: Time when the POI category was created.
        updated_at:
          type: string
          format: date-time
          description: Last time when the POI category was updated.
        public:
          type: boolean
          description: POI categories can be public or private.
        icon_base64: null
        selected_icon_base64: null
        parent_poi_category_id:
          type: integer
          description: POI category parent id.
        custom_fields:
          type: array
          items:
            $ref: '#/components/schemas/CustomField'
      example:
        id: 608
        name_en: Entrance
        name_es: Entrada
        code: CODERANDOM
        icon_url: >-
          /assets/map/poi_icon-60c6f0b39e5b0a8222abf82beb814aa90658546cd96d9c7aaf6120cd128b8af6.png
        selected_icon_url: >-
          /assets/map/poi_icon_sel-83ad85f42d8ef30355e5846c2254ba1891aa394068eb32949d4ee7fcfa564a9d.png
        updated_at: '2019-03-18T18:24:38.273+01:00'
        created_at: '2019-03-18T18:24:38.273+01:00'
        public: false
        parent_poi_category_id: 609
        custom_fields:
          - key: key1
            value: value1
    PoiIndoor:
      description: Represents a point inside a building.
      allOf:
        - type: object
          properties:
            position:
              $ref: '#/components/schemas/CartographyPosition'
        - $ref: '#/components/schemas/PoiBase'
    PoiOutdoor:
      description: Represents a point inside a building.
      allOf:
        - type: object
          properties:
            location:
              $ref: '#/components/schemas/Location'
        - $ref: '#/components/schemas/PoiBase'
    PoiBase:
      description: Default fields for a indoor or outdoor POI
      type: object
      properties:
        id:
          type: integer
          description: Indoor POI identifier.
          example: 1234
        building_id:
          type: integer
          description: >-
            Building identifier (retrieve all you buildings to know their
            identifiers).
          example: 1234
        floor_id:
          type: integer
          description: Floor identifier.
          example: 1234
        name:
          type: string
          description: Indoor POI name.
          example: POI name
        created_at:
          type: string
          format: date-time
          description: Time when the indoor POI was created.
          example: '2016-06-23T09:13:44.273+02:00'
        updated_at:
          type: string
          format: date-time
          description: Time when the indoor POI was created.
          example: '2016-06-23T09:13:44.273+02:00'
        category_id:
          type: integer
          description: >-
            The identifier of main the category asigned to POI. POIs can be
            differenciated by categories.
          example: 1
        categories:
          items:
            $ref: '#/components/schemas/PoiCategory'
        category_name:
          type: string
          description: The name of the category. POIs can be differenciated by categories.
        info:
          type: string
          description: Indoor POI aditional information.
          example: Random information of the POI
        info_unsafe:
          type: string
          description: 'Indoor POI aditional information, not escaped.'
        type:
          type: string
          description: This field allways null.
          example: ''
        icon:
          type: string
          description: Poi icon image
          example: /uploads/poi/170366/ab7979ae-dc43-4267-9ba5-bdd1bdccfa95.png
        selected_icon:
          type: string
          description: Poi selected icon image
          example: /uploads/poiselected/170366/7ef5589d-e1ab-4ad9-85a5-895589e81864.png
        custom_fields:
          type: array
          items:
            $ref: '#/components/schemas/CustomField'
    CartographyPosition:
      type: object
      properties:
        floor_id:
          description: Floor identifier where position is located.
          type: number
        radius:
          description: Position radius in meters.
          type: number
          format: float
        georeferences:
          $ref: '#/components/schemas/Location'
        cartesians:
          $ref: '#/components/schemas/Point'
        custom_fields:
          type: array
          items:
            $ref: '#/components/schemas/CustomField'
        x:
          deprecated: true
          type: integer
          format: float
        'y':
          deprecated: true
          type: integer
          format: float
        lat:
          deprecated: true
          type: integer
          format: float
        lng:
          deprecated: true
          type: integer
          format: float
    Configuration:
      x-private: true
      x-beta-analytic: true
      type: object
      properties:
        name:
          type: string
          description: property name. In snake case.
          example: enable_bluetooth
        organization_id:
          type: string
          format: uuid
          description: organization id.
          example: 3fa85f64-5717-4562-b3fc-2c963f66afa6
        configuration_group_id:
          type: string
          format: uuid
          description: configuration group id.
          example: 4080315a-dd07-44d6-8dcd-0e805d3c6452
        value:
          description: >-
            Configuration value. Supports the type selected for the
            configuration.
          type: object
          example: true
    ConfigurationGroup:
      x-private: true
      x-beta-analytic: true
      type: object
      properties:
        id:
          type: string
          format: uuid
          description: id.
          example: 3fa85f64-5717-4562-b3fc-2c963f66afa6
        name:
          type: string
          description: property name. In snake case.
          example: enable_bluetooth
        organization_id:
          type: string
          format: uuid
          description: organization id
          example: 4080315a-dd07-44d6-8dcd-0e805d3c6452
        type:
          type: string
          enum:
            - sdk
          example: sdk
          description: >-
            Type selected. Depending on this, the group will affect some fields
            or others of the configuration.
        is_default:
          type: boolean
          description: If this is the group default for configuration
          example: true
    Point:
      type: object
      description: >-
        Position in cartesian coordinates in meters taking the bottomleft corner
        as the origin.
      properties:
        x:
          type: number
          format: float
        'y':
          type: number
          format: float
    UnassignCriteria:
      required:
        - organization_ids
      type: object
      properties:
        organization_ids:
          uniqueItems: true
          type: array
          items:
            type: string
            description: >-
              List of groups to which users can be associated with the device.
              An empty array means that the device is available for all groups
              in the organization.
            example: 69e1c0503a0b-bc4c-a209-a30e-5231eef98a22
        organization:
          uniqueItems: true
          type: array
          writeOnly: true
          items:
            type: string
            deprecated: true
    UploadIndoorPoseForm:
      required:
        - accuracy
        - building_id
        - device_id
        - lat
        - level_id
        - lng
        - timestamp
        - x
        - 'y'
        - yaw
      type: object
      properties:
        device_id:
          type: integer
          description: Device id
          format: int64
          example: 122311111
        lat:
          type: number
          description: Geographic latitude in `WGS84`.
          format: double
          example: 0
        lng:
          type: number
          description: Geographic longitude in `WGS84`.
          format: double
          example: 0
        yaw:
          type: number
          description: Angle in grades.
          format: float
          example: 0
        timestamp:
          type: integer
          description: >-
            when the positioning occurred in milliseconds unix epoch timestamp.
            `
          format: int64
          example: 1602166298525
        accuracy:
          type: number
          description: radius of coordinate accuracy in meters.
          format: float
          example: 0
        timestamp_session:
          type: integer
          description: Positioning start time in milliseconds unix epoch.
          format: int64
          example: 1602166288525
        found_items:
          type: array
          description: Other elements to position found by the device.
          items:
            $ref: '#/components/schemas/FoundItem'
        x:
          type: number
          description: Building relative position in x axis.
          format: double
          example: 2.22
        'y':
          type: number
          description: Building relative position in y axis.
          format: double
          example: 2.22
        building_id:
          type: integer
          description: Building id.
          format: int64
          example: 1111
        level_id:
          type: integer
          description: Building floor id.
          format: int64
          example: 1111
        floorId:
          type: integer
          format: int64
          writeOnly: true
        volatile:
          $ref: '#/components/schemas/Volatile'
    UploadOutdoorPoseForm:
      required:
        - accuracy
        - building_ids
        - device_id
        - lat
        - lng
        - timestamp
        - yaw
      type: object
      properties:
        device_id:
          type: integer
          description: Device id
          format: int64
          example: 122311111
        lat:
          type: number
          description: Geographic latitude in `WGS84`.
          format: double
          example: 0
        lng:
          type: number
          description: Geographic longitude in `WGS84`.
          format: double
          example: 0
        yaw:
          type: number
          description: Angle in grades.
          format: float
          example: 0
        timestamp:
          type: integer
          description: >-
            when the positioning occurred in milliseconds unix epoch timestamp.
            `
          format: int64
          example: 1602166298525
        accuracy:
          type: number
          description: radius of coordinate accuracy in meters.
          format: float
          example: 0
        timestamp_session:
          type: integer
          description: Positioning start time in milliseconds unix epoch.
          format: int64
          example: 1602166288525
        found_items:
          type: array
          description: Other elements to position found by the device.
          items:
            $ref: '#/components/schemas/FoundItem'
        volatile:
          $ref: '#/components/schemas/Volatile'
        building_ids:
          type: array
          description: Buildings where the user has permissions.
          example:
            - 1111
            - 2222
          items:
            type: integer
            description: Buildings where the user has permissions.
            format: int64
        snr:
          type: number
          description: >-
            A GPS receiver measures signal strength or signal to noise. ratio
            (SNR)
          format: float
          example: 2.22
    UploadPosesForm:
      type: object
      properties:
        indoor_position:
          type: array
          items:
            $ref: '#/components/schemas/UploadIndoorPoseForm'
        outdoor_position:
          type: array
          items:
            $ref: '#/components/schemas/UploadOutdoorPoseForm'
    User:
      title: User
      type: object
      properties:
        situm_maps:
          type: boolean
          example: true
        sos_alarm:
          type: boolean
          example: true
          deprecated: true
        deadman_alarm:
          type: boolean
          example: true
          deprecated: true
        see_alarm:
          type: boolean
          example: true
          deprecated: true
        declare_emergency:
          type: boolean
          example: true
          deprecated: true
        cancel_emergency:
          type: boolean
          example: true
          deprecated: true
        confirm_emergency:
          type: boolean
          example: true
          deprecated: true
        collective_id:
          type: string
          format: uuid
          example: 0f1a3d9a-9ff4-4974-ba21-cebcfeb98cd6
          deprecated: true
        assignment_id:
          type: string
          format: uuid
          example: 0f1a3d9a-9ff4-4974-ba21-cebcfeb98cd6
          deprecated: true
        last_activity:
          type: string
        organization_uuid:
          type: string
          format: uuid
          example: 0f1a3d9a-9ff4-4974-ba21-cebcfeb98cd6
          deprecated: true
        organization_id:
          type: string
          format: uuid
          example: 0f1a3d9a-9ff4-4974-ba21-cebcfeb98cd6
        permissions:
          type: array
          deprecated: true
          items:
            $ref: '#/components/schemas/Permission'
        terms_accepted_at:
          type: string
          format: date-time
          description: Stores the date at which the user accepted the terms and conditions.
        is_staff:
          type: boolean
          example: true
          deprecated: true
    UserPoiPath:
      description: User poi.
      title: user_poi_path
      properties:
        user_id:
          type: string
          format: uuid
          example: 71asdfa-187a-4144-945d-6d8da94fac9c
        building_name:
          type: string
          description: Building name.
          example: shopping mall
        building_id:
          type: integer
          description: Building id.
          format: int32
          example: 1111
        poi_name:
          type: string
          description: Poi name.
          example: shopping mall
        poi_id:
          type: integer
          description: Poi id
          format: int32
          example: 1111
        timestamp_position:
          type: string
          description: Timestamp when position occurred.
          format: date-time
        latitude:
          type: number
          format: float
          description: Geographic latitude represented in `WGS84` coordinate system.
          example: 42.3307132892641
        longitude:
          type: number
          format: float
          description: Geographic longitude represented in `WGS84` coordinate system.
          example: -7.87168136788409
        t_latitude:
          type: number
          format: float
          description: >-
            Next Geographic latitude represented in `WGS84` coordinate system in
            the user path.
          example: 42.3307132892641
        t_longitude:
          type: number
          format: float
          description: >-
            Next Geographic longitude represented in `WGS84` coordinate system
            in the user path.
          example: -7.87168136788409
    UserPoiSessions:
      description: Sessions and time of stay of users in pois.
      title: user_poi_sessions_matches
      properties:
        user_id:
          type: string
          format: uuid
          example: 71asdfa-187a-4144-945d-6d8da94fac9c
        building_name:
          type: string
          description: Building name.
          example: shopping mall
        building_id:
          type: integer
          description: Building id.
          format: int32
          example: 1111
        poi_name:
          type: string
          description: Poi name.
          example: shopping mall
        poi_id:
          type: integer
          description: Poi id
          format: int32
          example: 1111
        start:
          type: string
          description: Session start date.
          format: date-time
        end:
          type: string
          description: Session end date.
          format: date-time
        stay_time:
          type: integer
          description: Stay time the user near of the poi.
    UserVisitors:
      type: object
      properties:
        date:
          type: string
          description: Date.
          format: date-time
          example: '2017-05-25'
        visitors:
          type: number
          description: Number of unique devices.
          example: 240
    RawData:
      type: object
      properties:
        deviceId:
          type: number
          description: Device unique identifier.
          example: 109112065234
        indoor:
          type: boolean
          description: Position type.
          example: true
        timestamp:
          type: string
          description: Position timestamp.
          format: date-time
          example: '2020-11-15T05:21:49Z'
        building_id:
          type: number
          description: Building unique identifier.
          example: 1234
        floor_id:
          type: number
          description: floor unique identifier.
          example: 4567
        lat:
          type: number
          description: Geographic latitude in `WGS84`  coordinate system.
          example: 48.2586649
        lng:
          type: number
          description: Geographic longitude in `WGS84`  coordinate system.
          example: -3.9073326
        x:
          type: number
          description: Cartesian coordinate x.
          example: 202.19
        'y':
          type: number
          description: Cartesian coordinate y.
          example: 198.73
        accuracy:
          type: number
          description: accuracy
          example: 274.36
        user_id:
          type: string
          format: uuid
          description: User unique identifier.
          example: 0f1a3d9a-9ff4-4974-ba21-cebcfeb98cd6
    PositioningTime:
      type: object
      properties:
        timestamp:
          type: integer
          description: 'day of week (ordinal) 1 = Monday , 7 = Sunday.'
          example: 1
        total:
          type: integer
          description: total positioning minutes (all users).
          example: 8036
        avg:
          type: number
          description: mean positioning minutes.
          example: 730
        std:
          type: number
          description: standard deviation.
          example: 642
    TraceSessions:
      type: object
      properties:
        timestamp_session:
          type: number
          description: Position timestamp.
          example: 1605787443628
        device_id:
          type: string
          description: device unique identifier.
          example: '1234567'
        user_id:
          type: string
          description: User unique identifier.
          format: uuid
          example: 0f1a3d9a-9ff4-4974-ba21-cebcfeb98cd6
        building_id:
          type: number
          description: Building unique identifier.
          example: 1234
    UserPositions:
      type: object
      properties:
        timestamp:
          type: string
          description: Position timestamp.
          format: date-time
          example: '2020-11-15T05:21:49Z'
        lat:
          type: number
          description: Geographic latitude in `WGS84` coordinate system.
          example: 48.2586649
        lng:
          type: number
          description: Geographic longitude in `WGS84`  coordinate system.
          example: -3.9073326
        building_id:
          type: number
          description: Building unique identifier.
          example: 1234
        indoor:
          type: boolean
          description: Position type.
          example: true
        user_id:
          type: string
          description: User unique identifier.
          format: uuid
          example: 0f1a3d9a-9ff4-4974-ba21-cebcfeb98cd6
        device_id:
          type: string
          description: device unique identifier.
          example: '1234567'
    GeohashHeatmap:
      type: object
      properties:
        user_id:
          type: string
          description: User unique identifier.
          format: uuid
          example: 0f1a3d9a-9ff4-4974-ba21-cebcfeb98cd6
        geohash:
          type: string
          description: level 10 precission geohash.
          example: eztyqcdsey
        lat:
          type: number
          description: geohasg latitude.
          example: 42.87227064371109
        lon:
          type: number
          description: geohash longitude.
          example: -8.563472628593445
        weight:
          type: number
          description: Number of positions in the geohash.
          example: 854
    UserSummaryView:
      description: Complete view for users.
      title: UserSummaryView
      allOf:
        - $ref: '#/components/schemas/User'
        - type: object
          properties:
            full_name:
              type: string
            email:
              type: string
              format: email
            uuid:
              type: string
              format: uuid
              deprecated: true
            id:
              type: string
              format: uuid
            code:
              type: string
              description: >-
                This field is available to the user in order to identify the
                user by his own code with which he is familiar (file number,
                bank account, employee number). Although it can be used to
                identify the user and filter through it, we do not currently
                allow the use of this parameter to access the website or change
                the password.
            created_at:
              type: string
              format: time-date
              example: '2019-07-01T15:21:54.276Z'
            updated_at:
              type: string
              format: time-date
              example: '2019-07-01T15:21:54.276Z'
            admin:
              type: boolean
              deprecated: true
            admin_org:
              type: boolean
              deprecated: true
            last_activity:
              type: string
              format: time-date
              example: '2019-07-01T15:21:54.276Z'
            locale:
              type: string
              enum:
                - es
                - en
              example: es
    UserExtraView:
      title: UserExtraView
      allOf:
        - $ref: '#/components/schemas/UserSummaryView'
        - type: object
          properties:
            subscribed_to_newsletter:
              type: boolean
            has_write_building:
              type: boolean
              deprecated: true
            is_verified:
              type: boolean
            has_building:
              type: boolean
              description: >-
                Indicates if the user is associated with any building.In order
                to associate it, it must be indicated in the user's buildings
                field.
            groups:
              deprecated: true
              type: array
              items:
                type: object
                format: uuid
                example: 0f1a3d9a-9ff4-4974-ba21-cebcfeb98cd6
            group_ids:
              type: array
              items:
                type: object
                format: uuid
                example: 0f1a3d9a-9ff4-4974-ba21-cebcfeb98cd6
            license:
              $ref: '#/components/schemas/License'
        - type: object
          properties:
            license:
              deprecated: true
    UserAdminView:
      title: UserAdminView
      allOf:
        - $ref: '#/components/schemas/UserExtraView'
        - type: object
          properties:
            verified_by_admin:
              type: boolean
              deprecated: true
    UserForm:
      title: UserForm
      description: User form to post
      type: object
      properties:
        email:
          type: string
          example: mail@mail.es
        password:
          type: string
          example: pass
        organization_uuid:
          type: string
          deprecated: true
          example: 09bcfc18-5df4-11ea-bc55-0242ac130003
        organization_id:
          type: string
          example: 09bcfc18-5df4-11ea-bc55-0242ac130003
        full_name:
          type: string
          example: My name
        locale:
          type: string
          example: en
        code:
          type: string
          example: user_code
        role_id:
          type: string
          example: ZONE_MANAGER
          enum:
            - ADMIN_ORG
            - ZONE_MANAGER
            - COLLECTIVE_MANAGER
            - USER
            - STAFF
        subscribed_to_newsletter:
          type: boolean
          example: false
        verified_by_Admin:
          type: boolean
          example: false
        is_manager:
          type: boolean
          deprecated: true
          example: false
        is_staff:
          type: boolean
          example: false
        rol_ids:
          type: array
          description: >-
            Role_ids are actually groups. In future versions the field will be
            renamed to group_ids.
          deprecated: true
          items:
            type: string
            format: uuid
          example:
            - ba8bc8ee-5df4-11ea-bc55-0242ac130003
            - a9c0193a-28c3-11eb-adc1-0242ac120002
        group_ids:
          type: array
          items:
            type: string
            format: uuid
          example:
            - ba8bc8ee-5df4-11ea-bc55-0242ac130003
            - a9c0193a-28c3-11eb-adc1-0242ac120002
        buildings:
          type: array
          deprecated: true
          items:
            type: number
          example:
            - 2233
            - 4432
        building_ids:
          type: array
          items:
            type: number
          example:
            - 2233
            - 4432
        situm_maps:
          type: boolean
          example: true
        sos_alarm:
          type: boolean
          example: true
          deprecated: true
        deadman_alarm:
          type: boolean
          example: true
          deprecated: true
        see_alarm:
          type: boolean
          example: true
          deprecated: true
        declare_emergency:
          type: boolean
          example: true
          deprecated: true
        cancel_emergency:
          type: boolean
          example: true
          deprecated: true
        confirm_emergency:
          type: boolean
          example: true
          deprecated: true
        collective_id:
          type: string
          format: uuid
          example: 0f1a3d9a-9ff4-4974-ba21-cebcfeb98cd6
          deprecated: true
        assignment_id:
          type: string
          format: uuid
          example: 0f1a3d9a-9ff4-4974-ba21-cebcfeb98cd6
          deprecated: true
        icon_colour:
          type: string
          example: '656465'
        info:
          type: string
          example: Some info
          description: User aditional information.
        custom_fields:
          type: object
          example:
            customfiel1: 10
            customfiel2: value cuestomfield2
    UserPatch:
      title: UserFormPatch
      description: User form to patch operation
      type: object
      properties:
        email:
          type: string
          example: mail@mail.es
        password:
          type: string
          example: password
        organization_id:
          type: string
          example: 09bcfc18-5df4-11ea-bc55-0242ac130003
        full_name:
          type: string
          example: My name
        locale:
          type: string
          example: en
        code:
          type: string
          example: user_code
        subscribed_to_newsletter:
          type: boolean
          example: false
        verified_by_Admin:
          type: boolean
          example: false
        role:
          type: string
          example: ZONE_MANAGER
          enum:
            - ADMIN_ORG
            - ZONE_MANAGER
            - COLLECTIVE_MANAGER
            - USER
            - STAFF
        group_ids:
          type: array
          items:
            type: string
            format: uuid
          example:
            - ba8bc8ee-5df4-11ea-bc55-0242ac130003
            - a9c0193a-28c3-11eb-adc1-0242ac120002
        building_ids:
          type: array
          items:
            type: number
          example:
            - 2233
            - 4432
        icon_colour:
          type: string
          example: '656465'
        info:
          type: string
          example: Some info
          description: User aditional information.
    Permission:
      title: Permission
      properties:
        uuid:
          type: string
          format: uuid
          example: 0f1a3d9a-9ff4-4974-ba21-cebcfeb98cd6
        permission:
          type: string
          example: ALL
          enum:
            - ALL
            - WRITE
            - ANALYTICS
            - READ
        typeEntityTarget:
          type: string
          example: BUILDING
          enum:
            - BUILDING
            - USER
            - GROUP
        idEntityTargetBuilding:
          type: number
          example: 1234
        idEntityTarget:
          type: string
          format: uuid
          example: 71asdfa-187a-4144-945d-6d8da94fac9c
    AnalyticsGeofencingMatchesBetweenUser:
      properties:
        origin_user_id:
          type: string
          format: uuid
          example: 7cc5dcbe-94e7-4270-b778-459bf88928f2
        origin_device_id:
          type: string
          example: 3674847383738
        start_shared_time:
          type: string
          format: date-time
          example: '2017-05-25T21:55:00.000Z'
        end_shared_time:
          type: string
          format: date-time
          example: '2017-05-25T21:59:00.000Z'
        total_shared_time:
          type: number
          example: 240
        matched_user_id:
          type: string
          format: uuid
          example: 71asdfa-187a-4144-945d-6d8da94fac9c
        matched_device_id:
          type: string
          example: 342143214321421440
        building_id:
          type: number
          format: long
          example: 4444
        fence_id:
          type: string
          format: uuid
          example: 0f1a3d9a-9ff4-4974-ba21-cebcfeb98cd6
    AnalyticsDistanceBetweenUser:
      type: object
      properties:
        origin_user_id:
          type: string
          format: uuid
          example: a0e115d1-0b32-44a2-8d56-21ba36b710f0
        origin_device_id:
          type: string
          example: 222333882898393820
        matched_user_id:
          type: string
          format: uuid
          example: 71asdfa-187a-4144-945d-6d8da94fac9c
        matched_device_id:
          type: string
          example: 342143214321421440
        building_id:
          type: number
          format: long
          example: 4444
        floor_id:
          type: number
          format: long
          example: 4444
        time_bucket:
          type: string
          format: date-time
          example: '2017-05-25T21:55:00Z'
        distance:
          type: number
          example: 5.843
    AnalyticsHasData:
      type: object
      properties:
        building_ids:
          type: array
          items:
            type: integer
            example:
              - 9476947494
              - 7886599875
        dates:
          type: array
          items:
            type: string
            format: date
            example:
              - '2020-12-15'
              - '2020-12-16'
        device_ids:
          type: array
          items:
            type: string
            example:
              - '952334819123'
              - '952334819124'
        floor_ids:
          type: array
          items:
            type: integer
            example: '4356'
        users_ids:
          type: array
          items:
            type: string
            format: uuid
            example:
              - 9ef69edc-3faf-4966-bb48-63338e0f3760
              - 9ef69edc-3faf-4966-bb48-63338e0f3761
    rawPoseAnalyticResult:
      type: object
      properties:
        analytics:
          type: array
          items:
            type: object
            properties:
              device_id:
                type: string
              floor_id:
                type: integer
              position:
                type: array
                items:
                  minimum: 2
                  maximum: 2
                  type: integer
                  format: float
              geographic:
                type: object
                properties:
                  lat:
                    type: integer
                    format: float
                  lng:
                    type: integer
                    format: float
              time_sec:
                type: string
                format: date-time
      example:
        analytics:
          - device_id: 255716529991690
            floor_id: 50
            position:
              - 8.77718353
              - 17.8887081
            yaw: 267
            accuracy: 0.9884532322
            time_sec: '2015-04-15T21:03:06.000Z'
          - device_id: 255716529991691
            floor_id: 50
            position:
              - 8.77718354
              - 17.88877648
            yaw: 267
            accuracy: 0.9884532322
            time_sec: '2015-04-15T21:03:06.000Z'
    GeofencingStayTime:
      type: object
      properties:
        timestamp:
          type: string
          format: date-time
          example: '2020-11-15T05:21:49Z'
        device_id:
          type: string
          example: 222333882898393820
        user_id:
          type: string
          format: uuid
          example: 71asdfa-187a-4144-945d-6d8da94fac9c
        building_id:
          type: number
          format: long
          example: 4444
        floor_id:
          type: number
          format: long
          example: 4444
        matched_fence_id:
          type: string
          format: uuid
          example: 71asdfa-187a-4144-945d-6d8da94fac9c
        seconds_in_fence:
          type: number
          example: 5843
        stay_time:
          type: string
          example: '02:44:24'
        sessions_count:
          type: number
          example: 3
    GeofencingSesionMatch:
      type: object
      properties:
        device_id:
          type: string
          example: 98393820
        user_id:
          type: string
          format: uuid
          example: 71asdfa-187a-4144-945d-6d8da94fac9c
        building_id:
          type: number
          format: long
          example: 4444
        floor_id:
          type: number
          format: long
          example: 4444
        matched_fence_id:
          type: string
          format: uuid
          example: 71asdfa-187a-4144-945d-6d8da94fac9c
        ts_start:
          type: string
          format: date-time
          example: '2020-11-15T05:21:49Z'
        ts_end:
          type: string
          format: date-time
          example: '2020-11-15T06:21:49Z'
        seconds_in_fence:
          type: number
          example: 60
    userPosition:
      type: object
      properties:
        timestamp:
          type: string
          description: Position timestamp.
          format: date-time
          example: '2020-11-15T05:21:49Z'
        session_mark:
          type: integer
          description: User positioning sesion mark.
          example: 435434
        building_id:
          type: integer
          description: Building unique identifier.
          example: 6584
        floor_id:
          type: integer
          description: floor unique identifier.
          example: 1232
        user_id:
          type: string
          description: User unique identifier.
          format: uuid
          example: 0f1a3d9a-9ff4-4974-ba21-cebcfeb98cd6
        device_id:
          type: string
          description: device unique identifier.
          example: '1234567'
        lat:
          type: number
          description: Geographic latitude in `WGS84` coordinate system.
          example: 48.2586649
        lng:
          type: number
          description: Geographic longitude in `WGS84`  coordinate system.
          example: -3.9073326
    MetaCommonData:
      title: MetaCommonData
      type: object
      description: Stats and info about request.
      properties:
        meta:
          type: array
          items:
            $ref: '#/components/schemas/ReportsMeta'
        statistics:
          $ref: '#/components/schemas/ReportsStatistics'
        rows:
          type: number
          format: integer
          example: 1
          description: Number of items returned in the response.
    ReportsError:
      title: ReportsError
      type: object
      description: Reports error
      properties:
        error:
          type: string
          description: Error description.
          example: Error validating 'ddd' to type Int8
    ReportsMeta:
      title: ReportsMeta
      type: object
      description: Field and type of response.
      properties:
        name:
          type: string
          description: Field name
        type:
          type: string
          enum:
            - String
            - Int32
            - DateTime
            - Int64
    ReportsStatistics:
      title: ReportsStatistics
      type: object
      description: Request statistics.
      properties:
        elapsed:
          type: number
          format: float
          description: Time elapsed in the query.
        rows_read:
          type: number
          format: integer
          description: Number of rows read in the database.
        bytes_read:
          type: number
          format: integer
          description: Number of bytes read in the database.
    visitorAnalylicResult:
      type: object
      properties:
        result:
          type: array
          items:
            type: object
            properties:
              value:
                type: object
                properties:
                  ends:
                    type: string
                    format: date-time
                    example: '2017-05-25T21:55:00.000-03:00'
                  starts:
                    type: string
                    format: date-time
                    example: '2017-05-25T21:55:00.000-03:00'
                  floor_id:
                    type: integer
                    example: 5342
                  minutes_session:
                    type: integer
                    example: 215
                  x:
                    type: integer
                    format: long
                    example: 66.11375427246094
                  'y':
                    type: integer
                    format: long
                    example: 29.11375427246094
    Volatile:
      type: object
      properties:
        building_origin:
          type: integer
          description: Identifier of the building from which the user comes.
          format: int64
          example: 1111
        building_destination:
          type: integer
          description: Identifier of the building where the user goes.
          format: int64
          example: 2222
        poi_id:
          type: integer
          description: Identifier of the poi found.
          format: int64
          example: 33333
    positioningSessionsAnalyticResult:
      type: object
      properties:
        result:
          type: array
          items:
            type: object
            properties:
              value:
                type: object
                properties:
                  ends:
                    type: string
                    format: date-time
                    example: '2017-05-25T21:55:00.000-03:00'
                  starts:
                    type: string
                    format: date-time
                    example: '2017-05-25T21:55:00.000-03:00'
                  floor_id:
                    type: integer
                    example: 5342
                  minutes_session:
                    type: integer
                    example: 215
                  x:
                    type: integer
                    format: long
                    example: 66.11375427246094
                  'y':
                    type: integer
                    format: long
                    example: 29.11375427246094
    positioningTimeAreaAnalyticResult:
      type: object
      properties:
        result:
          type: array
          items:
            type: object
            properties:
              user:
                type: string
                format: uuid
                example: 0f1a3d9a-9ff4-4974-ba21-cebcfeb98cd6
              matched_poses:
                type: integer
                example: 3032
              stay_duration:
                type: string
                example: '00:47:32'
              device:
                type: string
                example: '1003415738024'
              timestamp:
                type: string
                format: date-time
                example: '2020-05-14T00:00:00+02:00'
    positioningTimeAnalyticResult:
      type: object
      properties:
        result:
          type: array
          items:
            type: object
            properties:
              day:
                type: string
              timestamp:
                type: string
                format: timestamp
              total:
                type: integer
              avg:
                type: integer
              std:
                type: integer
              buildingId:
                type: integer
              levelId:
                type: integer
              isIndoor:
                type: boolean
    TaskBase:
      title: TaskBase
      type: object
      description: >-
        Task or event that will be monitored to make it happen and in what
        conditions it has been executed. This event or task can be planned in a
        temporary space and assigned to a user or none.
      properties:
        name:
          type: string
          example: Check that the doors are close.
          description: Task name
          minLength: 1
          maxLength: 200
        description:
          type: string
          example: Go through all the perimeter doors to make sure they are closed
          description: A more extensive description of what the task consists of.
        enabled:
          type: boolean
          example: true
          description: Indicates whether the task is to be performed or not.
        lat:
          type: number
          format: float
          description: Geographic latitude represented in `WGS84` coordinate system.
          example: 42.3307132892641
        lng:
          type: number
          format: float
          description: Geographic longitude represented in `WGS84` coordinate system.
          example: -7.87168136788409
        user_id:
          description: The uuid of the user that execute the task.
          type: string
          format: uuid
          example: 7cc5dcbe-94e7-4270-b778-459bf88928f2
        organization_id:
          description: The uuid of the organization.
          type: string
          format: uuid
          example: 7cc5dcbe-94e7-4270-b778-459bf88928f2
        executed_at:
          type: string
          format: date-time
          description: Time when the task was executed.
    TaskForm:
      allOf:
        - $ref: '#/components/schemas/TaskBase'
        - type: object
          properties:
            id:
              type: string
              format: uuid
              example: 7cc5dcbe-94e7-4270-b778-459bf88928f2
    Task:
      allOf:
        - $ref: '#/components/schemas/TaskForm'
        - type: object
          properties:
            organization_id:
              type: string
              format: uuid
              description: The organization id.
            created_at:
              type: string
              format: date-time
              description: Time when the task was created.
            updated_at:
              type: string
              format: date-time
              description: Last time when the task was updated.
            deleted_at:
              type: string
              format: date-time
              description: Last time when the task was deleted.
  requestBodies:
    AlarmForm:
      content:
        application/json:
          schema:
            type: object
            required:
              - type
              - building_id
              - floor_id
              - x
              - 'y'
            properties:
              type:
                $ref: '#/components/schemas/AlarmType'
              building_id:
                type: integer
                format: long
                description: >-
                  The identifier of the building where the alarm will be
                  created.
              x:
                type: integer
                format: float
                description: >-
                  The cartesian X coordinate where the alarm will be created. Is
                  is specified in meters from the bottom-left corner of the
                  floorplan. See <a
                  href="https://situm.freshdesk.com/a/solutions/articles/35000168185">
                  this explanation</a> for details.
              'y':
                type: integer
                format: float
                description: >-
                  The cartesian Y coordinate where the alarm will be created. Is
                  is specified in meters from the bottom-left corner of the
                  floorplan. See <a
                  href="https://situm.freshdesk.com/a/solutions/articles/35000168185">
                  this explanation</a> for details.
              lat:
                type: integer
                format: float
                description: >-
                  The latitude in WSG84 format where the alarm will be created.
                  See <a
                  href="https://situm.freshdesk.com/a/solutions/articles/35000168185">
                  this explanation</a> for details.
              lng:
                type: integer
                format: float
                description: >-
                  The longitude in WSG84 format where the alarm will be created.
                  See <a
                  href="https://situm.freshdesk.com/a/solutions/articles/35000168185">
                  this explanation</a> for details.
              floor_id:
                type: integer
                format: long
                description: The identifier of the floor where the alarm will be created.
              location_description:
                maxLength: 255
                type: string
                example: Main hall near the elevator
                description: >-
                  A free description of the location where the alarm was
                  triggered (e.g. "Main hall near the elevator").
              action:
                type: string
                description: A free description of the action that must be done.
                example: Send tactical team.
                maxLength: 255
              message:
                type: string
                example: Suspicious red bacpack.
                maxLength: 255
                description: >-
                  A free text that will be attached to the alarm (e.g.
                  "Suspicious red bagpack").
              custom_fields:
                type: array
                description: An array of custom fields that can be attached to the alarm.
                items:
                  $ref: '#/components/schemas/CustomField'
          example:
            type: DANGER
            building_id: 2038
            x: 20.25
            'y': 20.47
            floor_id: 4014
    AlarmUpdateForm:
      content:
        application/json:
          schema:
            type: object
            required:
              - user_uuid
            properties:
              attended_by:
                type: string
                format: uuid
                example: 3fa85f64-5717-4562-b3fc-2c963f66afa6
                description: Use id who attended to the alarm
              attended_at:
                type: string
                format: date-time
                description: Last time when the event was updated
              active:
                type: boolean
                description: If the alarms is active or not
                example: true
              custom_fields:
                type: array
                items:
                  $ref: '#/components/schemas/CustomField'
              location_description:
                type: string
                maxLength: 255
                example: Main hall near the elevator
                description: >-
                  A free description of the location where the status change was
                  triggered (e.g. "Main hall near the elevator").
              building_id:
                type: integer
                format: long
                description: >-
                  The identifier of the building where the alarm will be
                  updated.
              x:
                type: integer
                format: float
                description: >-
                  The cartesian X coordinate where the alarm will be updated. Is
                  is specified in meters from the bottom-left corner of the
                  floorplan. See <a
                  href="https://situm.freshdesk.com/a/solutions/articles/35000168185">
                  this explanation</a> for details.
              'y':
                type: integer
                format: float
                description: >-
                  The cartesian Y coordinate where the alarm will be updated. Is
                  is specified in meters from the bottom-left corner of the
                  floorplan. See <a
                  href="https://situm.freshdesk.com/a/solutions/articles/35000168185">
                  this explanation</a> for details.
              lat:
                type: integer
                format: float
                description: >-
                  The latitude in WSG84 format where the alarm will be updated.
                  See <a
                  href="https://situm.freshdesk.com/a/solutions/articles/35000168185">
                  this explanation</a> for details.
              lng:
                type: integer
                format: float
                description: >-
                  The longitude in WSG84 format where the alarm will be updated.
                  See <a
                  href="https://situm.freshdesk.com/a/solutions/articles/35000168185">
                  this explanation</a> for details.
              floor_id:
                type: integer
                format: long
                description: The identifier of the floor where the alarm will be updated.
    AlarmStatusCreateForm:
      content:
        application/json:
          schema:
            type: object
            required:
              - custom_fields
              - user_id
              - status
            allOf:
              - $ref: '#/components/schemas/AlarmStatusChangeBase'
    AlarmStatusUpdateForm:
      content:
        application/json:
          schema:
            required:
              - active
            type: object
            properties:
              message:
                type: string
                maxLength: 255
                description: The registered message that explains the status change.
                example: Suspicious red handbag in the lobby.
              location_description:
                type: string
                maxLength: 255
                example: Main hall near the elevator
                description: >-
                  A free description of the location where the status change was
                  triggered (e.g. "Main hall near the elevator").
              action:
                type: string
                maxLength: 255
                description: A free description of the action that must be done.
                example: Send tactical team.
    AlarmStatusChangeForm:
      description: List with all the alarm status changes.
      content:
        application/json:
          schema:
            type: object
            required:
              - user_id
              - status
            allOf:
              - $ref: '#/components/schemas/AlarmStatusChangeUpdate'
      required: true
    ApiKeyForm:
      description: Api key content
      content:
        application/json:
          schema:
            type: object
            required:
              - permission
            properties:
              permission:
                $ref: '#/components/schemas/ApiKeyPermission'
              user_id:
                type: string
                format: uuid
              description:
                type: string
                maxLength: 255
    FloorForm:
      required: true
      content:
        application/json:
          schema:
            type: object
            required:
              - building_id
              - level
              - map_id
            properties:
              building_id:
                type: integer
                example: 1234
              level:
                type: integer
                example: 1
              level_height:
                type: number
                format: float
                example: 2.7
              map_id:
                type: string
                example: bec3cfa0f-15d2-4f66-85a3-6a2ec527a75a.jpg
              name:
                type: string
                example: level
              custom_fields:
                type: array
                items:
                  $ref: '#/components/schemas/CustomField'
    PoiUpdateForm:
      required: true
      content:
        application/json:
          schema:
            type: object
            required:
              - position
            properties:
              name:
                type: string
                description: The name of the point of interest.
                example: Random name
              info:
                type: string
                description: Additional info for the point of interest.
                example: Additional info for the point of interest.
              icon:
                type: string
                description: Id of image to use as poi icon.
                example: ab7979ae-dc43-4267-9ba5-bdd1bdccfa95.png
              selected_icon:
                type: string
                description: Id of image to use as selected icon.
                example: 7ef5589d-e1ab-4ad9-85a5-895589e81864.png
              category_id:
                type: number
                description: >-
                  The Main category identifier to which point of interest will
                  be associated. See /api/v1/poi_categories to retrieve all the
                  categories your organization has access to.
                example: 4
              category_ids:
                type: array
                description: >-
                  The categories identifiers to which point of interest will be
                  associated. If more than one category is assigned, a poi the
                  array must contain the selected main category :category_id
                items:
                  type: number
                example:
                  - 4
                  - 5
                  - 6
              position:
                type: object
                description: The position where POI it is going to be created.
                required:
                  - floor_id
                  - georeferences
                properties:
                  floor_id:
                    type: number
                    description: Identifier of the floor where POI is gonna be positioned.
                    example: 3241
                  georeferences:
                    properties:
                      lat:
                        type: number
                        format: float
                        description: >-
                          Geographic latitude represented in `WGS84` coordinate
                          system.
                        example: 42.3307132892641
                      lng:
                        type: number
                        format: float
                        description: >-
                          Geographic longitude represented in `WGS84` coordinate
                          system.
                        example: -7.87168136788409
              custom_fields:
                description: Custom fields to implement in the point of interest.
                type: array
                items:
                  $ref: '#/components/schemas/CustomField'
    PoiCreateForm:
      required: true
      content:
        application/json:
          schema:
            type: object
            required:
              - building_id
              - position
            properties:
              name:
                type: string
                description: The name of the point of interest.
                example: Random name
              info:
                type: string
                description: Additional info for the point of interest.
                example: Some additional information
              icon:
                type: string
                description: Id of image to use as poi icon.
                example: ab7979ae-dc43-4267-9ba5-bdd1bdccfa95.png
              selected_icon:
                type: string
                description: Id of image to use as poi icon.
                example: 7ef5589d-e1ab-4ad9-85a5-895589e81864.png
              building_id:
                type: number
                description: The building identifier.
                example: 13412
              category_id:
                type: number
                description: >-
                  The category identifier to which point of interest will be
                  associated. See /api/v1/poi_categories to retrieve all the
                  categories your organization has access to.
                example: 4
              category_ids:
                type: array
                description: >-
                  The categories identifiers to which point of interest will be
                  associated. If more than one category is assigned, a poi the
                  array must contain the selected main category :category_id
                items:
                  type: number
                example:
                  - 4
                  - 5
                  - 6
              position:
                type: object
                description: The position where POI it is going to be created.
                required:
                  - floor_id
                  - georeferences
                properties:
                  floor_id:
                    type: number
                    description: Identifier of the floor where POI is gonna be positioned.
                    example: 3241
                  georeferences:
                    properties:
                      lat:
                        type: number
                        format: float
                        description: >-
                          Geographic latitude represented in `WGS84` coordinate
                          system.
                        example: 42.3307132892641
                      lng:
                        type: number
                        format: float
                        description: >-
                          Geographic longitude represented in `WGS84` coordinate
                          system.
                        example: -7.87168136788409
              custom_fields:
                description: Custom fields to implement in the point of interest.
                type: array
                items:
                  $ref: '#/components/schemas/CustomField'
    PoiCreateFormList:
      content:
        application/json:
          schema:
            type: array
            items:
              type: object
              required:
                - building_id
                - position
              properties:
                name:
                  type: string
                  description: The name of the point of interest.
                  example: Random name
                info:
                  type: string
                  description: Additional info for the point of interest.
                  example: Some additional information
                icon:
                  type: string
                  description: Id of image to use as poi icon.
                  example: ab7979ae-dc43-4267-9ba5-bdd1bdccfa95.png
                selected_icon:
                  type: string
                  description: Id of image to use as poi icon.
                  example: 7ef5589d-e1ab-4ad9-85a5-895589e81864.png
                building_id:
                  type: number
                  description: The building identifier.
                  example: 13412
                category_id:
                  type: number
                  description: >-
                    The category identifier to which point of interest will be
                    associated. See /api/v1/poi_categories to retrieve all the
                    categories your organization has access to.
                  example: 4
                category_ids:
                  type: array
                  description: >-
                    The categories identifiers to which point of interest will
                    be associated. If more than one category is assigned, a poi
                    the array must contain the selected main category
                    :category_id
                  items:
                    type: number
                  example:
                    - 4
                    - 5
                    - 6
                position:
                  type: object
                  description: The position where POI it is going to be created.
                  required:
                    - floor_id
                    - georeferences
                  properties:
                    floor_id:
                      type: number
                      description: >-
                        Identifier of the floor where POI is gonna be
                        positioned.
                      example: 3241
                    georeferences:
                      properties:
                        lat:
                          type: number
                          format: float
                          description: >-
                            Geographic latitude represented in `WGS84`
                            coordinate system.
                          example: 42.3307132892641
                        lng:
                          type: number
                          format: float
                          description: >-
                            Geographic longitude represented in `WGS84`
                            coordinate system.
                          example: -7.87168136788409
                custom_fields:
                  description: Custom fields to implement in the point of interest.
                  type: array
                  items:
                    $ref: '#/components/schemas/CustomField'
    PatrolCreateForm:
      content:
        application/json:
          schema:
            type: object
            required:
              - name
            properties:
              name:
                description: The name of the patrol.
                type: string
              organization_id:
                type: string
                description: The identifier of the organization.
                format: uuid
                example: 71asdfa-187a-4144-945d-6d8da94fac9c
              code:
                type: string
                example: roundCode
              description:
                description: The description of the patrol.
                type: string
              executions_per_day:
                description: Number of executions per day.
                type: number
                format: int32
                example: 5
              offset:
                type: integer
                format: long
              dwell_time:
                type: integer
              dwell_out_time:
                type: integer
              custom_fields:
                type: array
                items:
                  $ref: '#/components/schemas/CustomField'
    PatrolUpdateForm:
      content:
        application/json:
          schema:
            type: object
            required:
              - code
              - name
              - description
              - offset
              - dwellTime
              - dwellOutTime
            properties:
              name:
                description: The name of the patrol.
                type: string
              code:
                type: string
                example: roundCode
              description:
                description: The description of the patrol.
                type: string
              offset:
                type: integer
                format: long
              organization_id:
                type: string
                description: The identifier of the organization.
                format: uuid
                example: 71asdfa-187a-4144-945d-6d8da94fac9c
              dwell_time:
                type: integer
              dwell_out_time:
                type: integer
              executions_per_day:
                description: Number of executions per day.
                type: number
                format: int32
                example: 5
              custom_fields:
                type: array
                items:
                  $ref: '#/components/schemas/CustomField'
    PatrolStepUpdateForm:
      content:
        application/json:
          schema:
            properties:
              building_ids:
                type: array
                items:
                  type: integer
                  format: long
                  example: 1234
              steps:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: string
                      format: uuid
                    fence_id:
                      type: number
                      format: long
                    poi_id:
                      type: number
                      format: long
                    round_id:
                      type: string
                      description: The identifier of the patrol.
                    description:
                      type: string
                      description: The description of the patrol step.
                    start:
                      type: string
                      format: date-time
                      description: The start date of the patrol step.
                    end:
                      type: string
                      format: date-time
                      description: The end date of the patrol step.
                    offset:
                      type: integer
                      format: long
                      description: >-
                        The offset time of the patrol step. Basically how many
                        minutes has the user above and below the assigned
                        start/end dates.
                    dwell_time:
                      type: integer
                      format: long
                    dwell_out_time:
                      type: integer
                      format: long
                    type:
                      type: string
                      enum:
                        - GO_THROUGH
                        - STAY_IN
                        - ANY_TIME
                        - ANY_ORDER
    BuildingCreateForm:
      description: Data to create a building.
      content:
        application/json:
          schema:
            type: object
            properties:
              name:
                type: string
                description: Building name.
              location:
                allOf:
                  - $ref: '#/components/schemas/Location'
                  - type: object
                    required:
                      - lat
                      - lng
              dimensions:
                description: Building dimensions in meters.
                type: object
                properties:
                  width:
                    description: >-
                      Distance between the topleft corner and the topright
                      corner.
                    type: number
                    format: float
                  length:
                    description: >-
                      Distance between the topright corner and the bottomright
                      corner.
                    type: number
                    format: float
                required:
                  - width
                  - length
              description:
                type: string
                description: Building address.
              rotation:
                description: >-
                  Building rotation in radians. In starting from the west in a
                  counter-clockwise order.
                type: number
                format: float
              custom_fields:
                type: array
                items:
                  $ref: '#/components/schemas/CustomField'
              picture_id:
                type: string
                nullable: true
              info:
                type: string
                description: Aditional information of the building in HTML.
            required:
              - name
              - dimensions
              - location
            example:
              name: My building
              description: Some description.
              location:
                lat: 42.3307132892641
                lng: -7.87168136788409
              dimensions:
                width: 36.6006156111518
                length: 20.5051547583146
              rotation: -0.664248151098747
              custom_fields: []
              picture_id: 9e3213d1-1a70-4cc4-a9d3-d74fd8b47172.png
              info: Free HTML information about the floor
    BuildingUpdateForm:
      required: true
      description: Data to update a building.
      content:
        application/json:
          schema:
            type: object
            properties:
              dimensions:
                description: Building dimensions in meters.
                type: object
              name:
                type: string
                description: Building name.
                properties:
                  width:
                    description: >-
                      Distance between the topleft corner and the topright
                      corner.
                    type: number
                    format: float
                  lenght:
                    description: >-
                      Distance between the topright corner and the bottomright
                      corner.
                    type: number
                    format: float
              description:
                type: string
                description: Building address.
              location:
                $ref: '#/components/schemas/Location'
              rotation:
                description: >-
                  Building rotation in radians. In starting from the west in a
                  counter-clockwise order.
                type: number
                format: float
              custom_fields:
                type: array
                items:
                  $ref: '#/components/schemas/CustomField'
              info:
                type: string
                description: Aditional information of the building in HTML.
            required:
              - name
              - location
              - dimensions
            example:
              user_uuid: ffe70d04-b20b-4aea-a0e8-39d25e062db1
              name: My building
              description: Some description.
              location:
                lat: 42.3307132892641
                lng: -7.87168136788409
              dimensions:
                width: 36.6006156111518
                length: 20.5051547583146
              rotation: -0.664248151098747
              custom_fields: []
              picture_url: 9e3213d1-1a70-4cc4-a9d3-d74fd8b47172.png
              info: Free HTML information about the floor
    ConfigurationForm:
      x-private: true
      x-beta-analytic: true
      description: Configuration form.
      content:
        application/json:
          schema:
            type: array
            description: List with all configurations.
            items:
              $ref: '#/components/schemas/Configuration'
    ConfigurationGroupForm:
      x-private: true
      x-beta-analytic: true
      required: true
      description: Event ocurrence form to post.
      content:
        application/json:
          schema:
            type: array
            items:
              type: object
              allOf:
                - $ref: '#/components/schemas/ConfigurationGroup'
                - required:
                    - name
                    - is_default
                    - type
    GeofenceCreationForm:
      content:
        application/json:
          schema:
            allOf:
              - $ref: '#/components/schemas/GeofenceForm'
              - type: object
                required:
                  - name
                  - type
                  - geometric
                  - building_id
                  - floor_id
          example:
            code: geofenceCode
            name: Geofence Human readable name
            organization_id: 7cc5dcbe-94e7-4270-b778-459bf88928f2
            info: <p>Information of the geofence</p>
            type: POLYGON
            geometric:
              - - 42.87222393230354
                - -8.563449931291075
              - - 42.8721964122444
                - -8.563451272395582
              - - 42.87219542938491
                - -8.563330572989912
              - - 42.87222294944449
                - -8.563330572989912
              - - 42.87222393230354
                - -8.563449931291075
            floor_id: 4263
            level_id: 4263
            building_id: '2872'
            custom_fields:
              - key: a
                value: z
              - key: b
                value: m
              - key: a
                value: j
    GeofenceUpdateForm:
      content:
        application/json:
          schema:
            allOf:
              - $ref: '#/components/schemas/GeofenceForm'
              - type: object
          example:
            code: geofenceCode
            name: Geofence Human readable name
            organization_id: 7cc5dcbe-94e7-4270-b778-459bf88928f2
            info: <p>Information of the geofence</p>
            type: POLYGON
            geometric:
              - - 42.87222393230354
                - -8.563449931291075
              - - 42.8721964122444
                - -8.563451272395582
              - - 42.87219542938491
                - -8.563330572989912
              - - 42.87222294944449
                - -8.563330572989912
              - - 42.87222393230354
                - -8.563449931291075
            floor_id: 4263
            level_id: 4263
            building_id: '2872'
            custom_fields:
              - key: a
                value: z
              - key: b
                value: m
              - key: a
                value: j
    GeofencesSearchForm:
      description: Data to search geofences.
      content:
        application/json:
          schema:
            type: object
            description: >-
              All params organization_id,name,building_ids can't be empty. One
              of them must be provided.
            properties:
              organization_id:
                type: string
              building_ids:
                type: array
                items:
                  type: number
                  format: long
              name:
                type: string
              deleted:
                type: boolean
            example:
              organization_id: 7cc5dcbe-94e7-4270-b778-459bf88928f2
              building_ids:
                - 2872
                - 2873
              name: geofenceOfiPasillo
              deleted: true
    EventForm:
      required: true
      description: Event form to post
      content:
        application/json:
          schema:
            type: object
            required:
              - building_id
              - name
              - position
            properties:
              building_id:
                type: integer
                description: >-
                  Building identifier (retrieve all you buildings to know their
                  identifiers).
              name:
                type: string
                description: Event name
              created_at:
                type: string
                format: date-time
                description: Time when the event was created
              updated_at:
                type: string
                format: date-time
                description: Last time when the event was updated
              info:
                type: string
                description: Event aditional information
              position:
                $ref: '#/components/schemas/CartographyPosition'
              conversion_area:
                $ref: '#/components/schemas/CartographyPosition'
              custom_fields:
                type: array
                items:
                  $ref: '#/components/schemas/CustomField'
    EventOcurrenceForm:
      required: true
      description: Event ocurrence form to post.
      content:
        application/json:
          schema:
            type: object
            required:
              - occurrence
            properties:
              occurrence:
                type: object
                required:
                  - encoded_macaddr
                properties:
                  clicked_at:
                    type: string
                    format: date-time
                    description: Time when the event ocurrence was triggered.
                  conversion_at:
                    type: string
                    format: date-time
                    description: Time when the event conversion action was triggered.
                  encoded_macaddr:
                    type: integer
                    description: a device id
    PoiCategoryForm:
      required: true
      description: Poi category form to post.
      content:
        application/json:
          schema:
            type: object
            required:
              - name_en
              - code
            properties:
              name_en:
                type: string
                description: The name of the category in English.
              name_es:
                type: string
                description: The name of the category in Spanish.
              code:
                type: string
                description: POI category code.
              icon:
                type: string
                description: POI image url.
              selected_icon:
                type: string
                description: POI selected image url.
              parent_poi_category_id:
                type: integer
                description: POI category parent id.
              custom_fields:
                type: array
                items:
                  $ref: '#/components/schemas/CustomField'
    PathForm:
      description: >-
        This graph represents all the routes by which the user can move within
        the building.
      content:
        application/json:
          schema:
            type: object
            properties:
              nodes:
                type: array
                description: >-
                  Each node represents a certain location within the building
                  (x, y, floor).
                items:
                  type: object
                  title: Node
                  properties:
                    id:
                      type: integer
                      description: Node identifier.
                    floor_id:
                      type: integer
                      description: Floor identifier in which the node is situated.
                    x:
                      type: number
                      format: float
                      description: >-
                        Cartesian coordinate in meters taking the bottomleft
                        corner as the origin.
                    'y':
                      type: number
                      format: float
                      description: >-
                        Cartesian coordinate in meters taking the bottomleft
                        corner as the origin.
              links:
                type: array
                items:
                  title: Link
                  type: object
                  properties:
                    source:
                      type: integer
                      description: Node identifier.
                    target:
                      type: integer
                      description: Node identifier.
                    origin:
                      type: string
                      enum:
                        - source
                        - target
                        - both
                      description: >
                        Indicates if the link is uni or bidirectional depending
                        on whether the origin is in one, another or both nodes.
                    accesible:
                      type: boolean
                      description: >-
                        Indicates if the path is situable for persons with
                        reduced mobility.
                    tags:
                      description: Indicates some properties of the links.
                      type: array
                      items:
                        type: string
    UserForm:
      description: User form to post.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/UserForm'
    UserCreateForm:
      required: true
      description: >-
        The password is always required, but you can pass email or code. Both
        are not required.
      content:
        application/json:
          schema:
            allOf:
              - $ref: '#/components/schemas/UserForm'
            required:
              - email
              - password
              - code
              - is_manager
    UserUpdateForm:
      required: true
      content:
        application/json:
          schema:
            allOf:
              - $ref: '#/components/schemas/UserForm'
              - type: object
                properties:
                  accept_terms:
                    type: boolean
                    nullable: true
                    default: null
    UserPatchForm:
      required: true
      content:
        application/json:
          schema:
            allOf:
              - $ref: '#/components/schemas/UserPatch'
              - type: object
                properties:
                  accept_terms:
                    type: boolean
                    nullable: true
                    default: null
    UpdatePasswordRequest:
      description: Update pasword request.
      content:
        application/json:
          schema:
            type: object
            properties:
              n_password:
                type: string
                example: mail@mail.es
              old_password:
                type: string
                example: pass
    UpdateUserAdmin:
      description: UpdateUserAdmin request.
      content:
        application/json:
          schema:
            type: object
            properties:
              isAdmin:
                type: boolean
                example: true
    GroupUpdateForm:
      description: Group update form.
      required: true
      content:
        application/json:
          schema:
            allOf:
              - $ref: '#/components/schemas/GroupBase'
    GroupCreateForm:
      description: Group create form.
      required: true
      content:
        application/json:
          schema:
            allOf:
              - $ref: '#/components/schemas/GroupBase'
            required:
              - name
              - organization_id
    TaskPatchForm:
      required: true
      content:
        application/json:
          schema:
            allOf:
              - $ref: '#/components/schemas/TaskBase'
    TaskForm:
      required: true
      content:
        application/json:
          schema:
            required:
              - name
            allOf:
              - $ref: '#/components/schemas/TaskBase'
  securitySchemes:
    AuthorizationBearerJWT:
      type: http
      scheme: bearer
      bearerFormat: JWT
      description: >-
        Use the Authorization based on a Bearer JWT token. <a
        href="#auth_jwt_bearer">See JWT Bearer Auth for details</a>.
    AuthorizationAPIKEY:
      type: apiKey
      in: header
      name: X-API-KEY
      description: >-
        Use the Authorization based on APIKEY headers. <a
        href="#auth_apikey">See APIKEY Auth for details</a>.
security:
  - AuthorizationBearerJWT: []
  - AuthorizationAPIKEY: []
